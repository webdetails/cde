{
 "components": {
  "rows": [
   {
    "id": "SELECTORS",
    "name": "Selects",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Selects"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "81893cb3-2a8d-e749-6312-bd5de73797ba",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "singleFilter_group"
     },
     {
      "name": "title",
      "type": "String",
      "value": "Single Selection"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": "${p:singleSelectionParam_group}"
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "valueAsId",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "outputFormat",
      "type": "outputFormatCustom",
      "value": "lowestID"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "getData_IdValue_IdGroup"
     },
     {
      "name": "valuesArray",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "alwaysExpanded",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "multiselect",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "selectionLimit",
      "type": "Integer",
      "value": "2000"
     },
     {
      "name": "pageSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "showIcons",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "showButtonOnlyThis",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "useOverlay",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "showFilter",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:singleFilterObj_group}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postUpdate",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderRootHeader",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderRootSelection",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderRootFooter",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderGroupSelection",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderItemSelection",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "sortGroup",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "sortItem",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "options",
      "type": "JavaScript",
      "value": "function(){\n    return {};\n}"
     }
    ],
    "type": "ComponentsFilterComponent",
    "typeDesc": "Filter Component"
   },
   {
    "id": "1c88a70b-d093-ff1e-0c45-69d60154a736",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "multiFilter_group"
     },
     {
      "name": "title",
      "type": "String",
      "value": "Multiple Selection"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": "${p:multiSelectionParam_group}"
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "valueAsId",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "outputFormat",
      "type": "outputFormatCustom",
      "value": "highestID"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "getData_IdValue_IdGroup"
     },
     {
      "name": "valuesArray",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "alwaysExpanded",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "multiselect",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "selectionLimit",
      "type": "Integer",
      "value": "2000"
     },
     {
      "name": "pageSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "showIcons",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "showButtonOnlyThis",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "useOverlay",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "showFilter",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "multiFilterObj_group"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postUpdate",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderRootHeader",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderRootSelection",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderRootFooter",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderGroupSelection",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "renderItemSelection",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "sortGroup",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "sortItem",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "options",
      "type": "JavaScript",
      "value": "function(){\n    return {};\n}"
     }
    ],
    "type": "ComponentsFilterComponent",
    "typeDesc": "Filter Component"
   },
   {
    "id": "GENERIC",
    "name": "Generic",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Generic"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "12238784-57b5-530e-9c25-4cbf5f07d41f",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "singleSelectionParam_group"
     },
     {
      "name": "javaScript",
      "type": "JavaScript",
      "value": "[]; "
     },
     {
      "name": "parameterViewRole",
      "type": "parameterViewRoleCustom",
      "value": "unused"
     },
     {
      "name": "bookmarkable",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "public",
      "value": "false",
      "type": "Boolean"
     }
    ],
    "type": "ComponentsJavascriptParameter",
    "typeDesc": "Custom parameter"
   },
   {
    "id": "92ad970b-1114-f826-0906-c8d9a5b902bf",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "multiSelectionParam_group"
     },
     {
      "name": "javaScript",
      "type": "JavaScript",
      "value": "[]; "
     },
     {
      "name": "parameterViewRole",
      "type": "parameterViewRoleCustom",
      "value": "unused"
     },
     {
      "name": "bookmarkable",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "public",
      "value": "false",
      "type": "Boolean"
     }
    ],
    "type": "ComponentsJavascriptParameter",
    "typeDesc": "Custom parameter"
   },
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Others"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "d7ea074b-dfa1-1f2f-7db8-5da4370e95c7",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "table_groups"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "colTypesCustom",
      "value": "[]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[\"25%\",\"25%\",\"25%\",\"25%\"]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": ""
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "getData_IdValue_IdGroup"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "simple_numbers"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "bootstrap"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${p:tableObj_groups}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "199d2bb3-bff6-cbb9-544d-7f2203cdd310",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "txt_singleSelection_group"
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "['${p:singleSelectionParam_group}']"
     },
     {
      "name": "expression",
      "type": "JavaScript",
      "value": "function(){\n    \n    return \"Result: \" + JSON.stringify(this.dashboard.getParameterValue('${p:singleSelectionParam_group}'));\n} "
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "txt_singleSelectionObj_group"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     }
    ],
    "type": "ComponentstextComponent",
    "typeDesc": "Text Component"
   },
   {
    "id": "ab7cbb01-cf9b-ca0c-5245-6f3c4a6a1426",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "txt_multiSelection_group"
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "['${p:multiSelectionParam_group}']"
     },
     {
      "name": "expression",
      "type": "JavaScript",
      "value": "function(){\n    var selectedItems = this.dashboard.getParameterValue('${p:multiSelectionParam_group}');\n    \n    /*\n    return Mustache.render([\n        'Result: {{result}} <br/>',\n        'Selected items:',\n        '<ul>',\n        '{{#items}}',\n        '<li> \"{{.}}\" </li>',\n        '{{/items}}',\n        '</ul>',\n        ''].join(' '), { \n            items: selectedItems,\n            result: JSON.stringify(selectedItems)\n        });\n    */\n    \n    var txt = \"Result: \" + JSON.stringify(selectedItems) + \" <br/>Selected items: <ul>\";\n    for( i=0 ; i < selectedItems.length; i++ ){\n        txt = txt + \"<li>\" + selectedItems[i] + \"</li>\";\n    }\n    txt = txt + \"</ul>\";\n    \n    return txt;\n} "
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "txt_multiSelectionObj_group"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     }
    ],
    "type": "ComponentstextComponent",
    "typeDesc": "Text Component"
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "SCRIPTING",
    "name": "SCRIPTING Queries",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "SCRIPTING Queries"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "d82fc8db-6b93-a26c-7000-4cafec0209f4",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "getData_IdValue_IdGroup"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;    \t\t\t\t\nString[] columnNames = new String[]{\t\t\t\t\t\n\t\"id\",\t\"name\",\t\"parentid\",\t\"parentname\"\t\n};\t\t\t\t\t\nClass[] columnTypes = new Class[]{\t\t\t\t\t\n\tFloat.class,\tString.class,\tString.class,\tString.class\t\n};\t\t\t\t\t\n\t\t\t\t\t\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\t\t\t\t\t\n\t\t\t\t\t\nmodel.addRow(new Object[]{    new String (\"[Zeroes].[One]\"),\tnew String (\"One\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Zeroes].[Two]\"),\tnew String (\"Two\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Zeroes].[Three]\"),\tnew String (\"Three\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Zeroes].[Four]\"),\tnew String (\"Four\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Zeroes].[Five]\"),\tnew String (\"Five\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Zeroes].[Six]\"),\tnew String (\"Six\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Zeroes].[Seven]\"),\tnew String (\"Seven\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Zeroes].[Eight]\"),\tnew String (\"Eight\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Zeroes].[Nine]\"),\tnew String (\"Nine\"),\tnew String (\"[Zeroes]\"),\tnew String (\"Zeroes\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Ten]\"),\tnew String (\"Ten\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Eleven]\"),\tnew String (\"Eleven\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Twelve]\"),\tnew String (\"Twelve\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Thirteen]\"),\tnew String (\"Thirteen\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Fourteen]\"),\tnew String (\"Fourteen\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Fifteen]\"),\tnew String (\"Fifteen\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Sixteen]\"),\tnew String (\"Sixteen\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Seventeen]\"),\tnew String (\"Seventeen\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Eighteen]\"),\tnew String (\"Eighteen\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Ones].[Nineteen]\"),\tnew String (\"Nineteen\"),\tnew String (\"[Ones]\"),\tnew String (\"Ones\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty]\"),\tnew String (\"Twenty\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-one]\"),\tnew String (\"Twenty-one\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-two]\"),\tnew String (\"Twenty-two\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-three]\"),\tnew String (\"Twenty-three\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-four]\"),\tnew String (\"Twenty-four\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-five]\"),\tnew String (\"Twenty-five\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-six]\"),\tnew String (\"Twenty-six\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-seven]\"),\tnew String (\"Twenty-seven\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-eight]\"),\tnew String (\"Twenty-eight\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\nmodel.addRow(new Object[]{\tnew String (\"[Twos].[Twenty-nine]\"),\tnew String (\"Twenty-nine\"),\tnew String (\"[Twos]\"),\tnew String (\"Twos\")\t});\n\nreturn model;"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   }
  ]
 },
 "filename": "/public/plugin-samples/pentaho-cdf-dd/tests/FilterComponent/filter_reference.cdfde",
 "layout": {
  "rows": [
   {
    "id": "ce99cd06-f56a-a7f3-dfee-7a78ad2b4c2b",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "templateCSS"
     },
     {
      "name": "resourceFile",
      "type": "ResourceFile",
      "value": "${res:../../template.css}"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Css"
     }
    ],
    "type": "LayoutResourceFile",
    "typeDesc": "Resource"
   },
   {
    "id": "f457c774-af10-cfbf-ae3b-3881bd5ddb81",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "cdeReferenceCSS"
     },
     {
      "name": "resourceFile",
      "type": "ResourceFile",
      "value": "${res:../../cdeReference.css}"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Css"
     }
    ],
    "type": "LayoutResourceFile",
    "typeDesc": "Resource"
   },
   {
    "id": "9dc62b61-5516-9f63-a5f2-a5d5ad2de4f5",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "fixesCSS"
     },
     {
      "name": "resourceCode",
      "type": "Resource",
      "value": "#singleFilterObj_expanded .filter-root-items-container{\n    min-height: 283px;\n} \n\n/*\npre {\n    overflow: scroll;\n} \n*/\n\ndt {\n    padding-left: 10px;\n    font-family: monospace;\n}\ndd {\n    padding-left: 30px;\n} "
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Css"
     }
    ],
    "type": "LayoutResourceCode",
    "typeDesc": "Resource"
   },
   {
    "id": "82a69ee2-350d-854c-1d40-362c56f423bf",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "bba4abf0-b4bf-135f-7e8c-ad7c96183e0a",
    "parent": "82a69ee2-350d-854c-1d40-362c56f423bf",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "docHeader"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "content"
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "19448f7f-6985-dca0-a9c7-9a34a90d5c02",
    "parent": "bba4abf0-b4bf-135f-7e8c-ad7c96183e0a",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "61896f4a-28a1-99cc-e8d5-73d54394a176",
    "parent": "19448f7f-6985-dca0-a9c7-9a34a90d5c02",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "ref_intro_quickref"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "b74b70a5-b753-96a7-9831-f48038de66a8",
    "parent": "61896f4a-28a1-99cc-e8d5-73d54394a176",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<h1>Filter Component Reference</h1>\n<h2> Introduction </h2>\n<p>\nA filter is a central component in a dashboard.\nTraditionally represented as a drop-down list, it is typically used as a means \nto quickly filter information.\n</p>\n<p>\nIn CDE, the list of selected items is usually stored in a dashboard parameter. \nWhenever the filter is updated, the parameter is read and the items in that list are marked as selected.\nWhen the user changes the selection, the parameter is updated.\n</p> \n\n<h2>Quick Reference (for the impatient)</h2>\n<p>\nThe main properties of the Filter Component are:\n<dl>\n    <dt>Title</dt>\n    <dd>\n        Label on top of the filter\n    </dd>\n    \n    <dt>Parameter</dt>\n    <dd> Parameter []\n        <p>\n        Name of the parameter that stores the selection state.\n        </p>\n        <p>   \n        The filter reads from the parameter when the component renders, \n        and writes to the parameter whenever the user chooses to commit the selection state.\n        In single-select mode, the commit is automatic, whereas in multi-select mode\n        the user must first click on the &quot;Apply&quot; button.\n        </p>\n        <p>\n        The parameter is written as an array of ID's, so for a selection of \"Foo\" + \"Bar\", \n        the parameter will have [\"Foo\", \"Bar\"]. In the case where only one selection is made, \n        the array will have one element, eg. [\"Foo\"].\n        </p>\n    </dd>\n    \n    <dt>Multi Select</dt>\n    <dd>Boolean [<code>False</code>].\n        <p> \n        By default, it is set to <code>False</code>, the filter only allows the selection of single items.\n        If set to <code>true</code>, multiple items can be selected, \n        up to the number specified by the property <code>Selection Limit</code>\n        </p>\n    </dd>\n    \n    <dt>Selection Limit</dt>\n    <dd>Integer [<code>2000</code>]\n        <p>\n        Limits the number of item that can be selected. \n        This property acts globally, in the sense that it does not matter which group the option belongs to.\n        Only active when <code>multiselect</code> is <code>True</code>.\n        </p> \n    </dd>\n    \n    <dt>Show Filter</dt>\n    <dd>Boolean [<code>True</code>].\n        <p>\n        Set to True to enable the search box.\n        </p>\n    </dd>\n    \n    <dt>Show Icons</dt>\n    <dd>Boolean [<code>True</code>].\n        <p>\n        If set to True, an icon (checkbox or radio button) is shown next to each item.\n        </p>\n    </dd>\n    \n    <dt>Always Expanded</dt>\n    <dd>Boolean [<code>False</code>].\n        <p>    \n        Set to True to keep the filter permanently open.\n        </p>\n    </dd>\n\n    <dt>Output Type</dt>\n    <dd>Enum {<code>&quot;Item Ids&quot;</code> | <code>&quot;Group and Item Ids&quot;</code>}\n        [<code>&quot;Item Ids&quot;</code>]\n        <p>        \n        Determines how the selection is written to the parameter upon commit.\n        If set to <code>&quot;Group and Item Ids&quot;</code>, \n        the filter attemps to use groups Ids  when all of its members are selected, \n        which results in a more compact result.\n        </p>\n    </dd>\n    \n    <dt>Value as id</dt>\n    <dd>Boolean [<code>False</code>].\n        <p>\n        Set to True if you want the filter to output the item labels instead of the ids.\n        </p>\n    </dd>\n</dl>\n</p>\n "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "4dc55d66-1b39-6230-581d-e579c83b6a7b",
    "parent": "19448f7f-6985-dca0-a9c7-9a34a90d5c02",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "ref_addIns"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "99f0e26b-b653-47f4-d501-e03929172f92",
    "parent": "4dc55d66-1b39-6230-581d-e579c83b6a7b",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<h3>Add-Ins</h3>\n<p>\nThe default behaviour of the component can be customized by associating a list of add-ins\nto each <i>slot</i>.\nThe signature of the add-ins is <code>function (target, state, options)</code>, \nwhere <code>state</code> contains two fields, <code>model</code> and <code>configuration</code>.\n</p>\n<p>\nThe available slots are:\n</p>\n<dl>\n    <dt>postUpdate</dt>\n    <dd>\n        Runs when data is added to model.\n        <code>target</code> is <code>null</code>.\n    </dd>\n    \n    <dt>renderRootHeader</dt>\n    <dd>\n        Runs on every update of the Root header (the part of filter that remains visible when the filter is collapsed).\n        <code>target</code> is the DOM element associated with the root container, e.g. <code>$('.filter-root-container')</code>.\n    </dd>\n\n    <dt>renderRootSelection</dt>\n    <dd>\n        Runs when the selection changes.\n        <code>target</code> is the DOM element associated with the root container, e.g. <code>$('.filter-root-container')</code>.\n    </dd>\n    \n    <dt>renderRootFooter</dt>\n    <dd>\n        Runs when the Root footer is updated (e.g. notifications).\n        <code>target</code> is the DOM element associated with the root container, e.g. <code>$('.filter-root-container')</code>.\n    </dd>\n    \n    <dt>renderGroupSelection</dt>\n    <dd>\n        Runs when the selection changes.        \n        <code>target</code> is the DOM element associated with the group container, e.g. <code>$('.filter-group-container')</code>.\n    </dd>\n    \n    <dt>renderItemSelection</dt>\n    <dd>\n        Runs when the selection changes.\n        <code>target</code> is the DOM element associated with the item container, e.g. <code>$('.filter-item-container')</code>.\n\n    </dd>\n    \n    <dt>sortGroup</dt>\n    <dd>\n        Determines the visual order of the groups of items, must return a value (string or number).\n        <code>target</code> is <code>null</code>.\n    </dd>\n    \n    <dt>sortItem</dt>\n    <dd>\n        Determines the visual order of the items, must return a value (string or number).\n        <code>target</code> is <code>null</code>.\n    </dd>\n    \n</dl>\n "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "a38f775c-9e87-28d8-c86d-f812badf8a11",
    "parent": "19448f7f-6985-dca0-a9c7-9a34a90d5c02",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "ref_options"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "ee548d42-ffed-ecb2-a6e4-4f162d5e4826",
    "parent": "a38f775c-9e87-28d8-c86d-f812badf8a11",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<h3>Advanced properties</h3>\n<p>  \nThere are also advanced properties, that allow further customization of the component:\n<dl>\n    <dt>Advanced Options</dt>\n    <dd>\n        Function that returns a javascript object. Possible properties:\n        <pre>\n{\n\n    /**\n     * Properties associated with importing data into the model\n     */\n    input: {\n      indexes: { // Column indexes of the different fields (0-based)\n        id: 0,           // Id is a string that identifies an item uniquely\n        label: 1,        // Label is the text associated with an item\n        parentId: 2,     // If the item belongs to a group of options, this is the id of the group\n        parentLabel: 3,  // Label of the group to which the item belongs to.\n        value: undefined // Secondary bit of text that will be show next to the item label\n      },\n      defaultModel: { // Default properties of the model\n        isDisabled: true\n      },\n      root: {\n        id: undefined // Overrides the id of the root.\n      }\n    },\n    \n    \n    /**\n     * Properties associated with exporting the state of the model to a parameter\n     */\n    output: {\n      outputFormat: 'lowestId'  // equivalent to setting Output Type option to \"Item Ids\" in CDE\n                                // 'highestId' is equivalent to picking \"Group and Item Ids\" in CDE\n                                // It is also possible to assign a custom function there\n    },\n    \n    \n    /**\n     * Configuration the response of the component to its environment\n     */\n    component: {\n      pagination: {\n        pageSize: Infinity // An integer sets the number of items per page. Infinity disables pagination. \n      },\n      search: {\n        serverSide: false // Set to true only if your queries accept a search parameter \n      },\n      selectionStrategy: {  // Interaction logic. What actions should occur when I click on an item \n        type: 'LimitedSelect', // 'SingleSelect' or 'LimitedSelect'\n        limit: 500 // sets the maximum number of options that can be selected\n      },\n    \n      /**\n       * Configuration of the Root View\n       */\n      Root: {\n        options: {\n          styles: [], // array containing a list of CSS classes to be added to the root container\n          showCommitButtons: true,   // show/hide Apply/Cancel Buttons \n          showFilter: false,         // show/hide filter box\n          showGroupSelection: true,  // show/hide All\n          showButtonOnlyThis: false,\n          showSelectedItems: false,  // optionally display the labels of selected items\n          showNumberOfSelectedItems: true,\n          showValue: false,         // optionally shows the value associated with the root \n          scrollThreshold: 12, // number of children (items or groups) that triggers a scrollbar\n          useOverlay: true, // should the filter display an overlay when expanded?\n          expandMode: 'absolute' // 'relative' will push content on expand, 'absolute' will not\n        },\n        strings: {\n          title: '',            // overrides Title property\n          isDisabled: 'Unavailable', // message displayed when the filter is disabled\n          allItems: 'All', // message displayed when all items are selected\n          noItems: 'None', // message displayed when no items are selected\n          btnApply: 'Apply', // label of the Apply button\n          btnCancel: 'Cancel'  // label of the Cancel button\n        },\n        view: {\n          overlaySimulateClick: true, // when clicking on the overlay, should the click \n                                      // be delegated to the element underneath?\n          scrollbar: { \n            engine: 'mCustomScrollbar', // also 'optiscroll'\n            options: { //engine-specific options\n              theme: 'dark',\n              alwaysTriggerOffsets: false,\n              onTotalScrollOffset: 100\n            }\n          }\n        }\n      },\n    \n      /**\n       * Configuration of the Group View\n       */\n      Group: {\n        options: {\n          showFilter: false,\n          showCommitButtons: false,\n          showGroupSelection: false,\n          showButtonOnlyThis: false,\n          showButtonCollapse: false, // show/hide button that allows collapsing of groups\n          showValue: false, // optionally shows the value associated with the group \n          scrollThreshold: Infinity // number of items in the group that triggers a group-only scrollbar\n        },\n        strings: { // Same keys than Root, but used in the context of a Group\n          allItems: 'All',\n          noItems: 'None',\n          btnApply: 'Apply',\n          btnCancel: 'Cancel'\n        }\n      },\n    \n      /**\n       * Configuration of the Item View\n       */\n      Item: {\n        options: {\n          showButtonOnlyThis: false, //show/hide \"Only This\" button \n          showValue: false // optionally shows the value associated with the item \n        },\n        strings: {\n          btnOnlyThis: 'Only' // caption of the \"Only this\" button\n        }\n    }\n}\n        </pre>\n    </dd>\n</dl>\n</p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "891cc3d9-a2f6-7f95-bcdb-2b33b5df2bb4",
    "parent": "82a69ee2-350d-854c-1d40-362c56f423bf",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "docBody"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "content"
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "9cc95ca2-44be-9720-c2a9-0431689c9c2f",
    "parent": "891cc3d9-a2f6-7f95-bcdb-2b33b5df2bb4",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "group"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "12f967f6-f4ec-e201-a5cf-171f96f0817c",
    "parent": "9cc95ca2-44be-9720-c2a9-0431689c9c2f",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "b4ce2823-02c8-ecfb-769d-26a8acd2b8de",
    "parent": "12f967f6-f4ec-e201-a5cf-171f96f0817c",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<h2>Example</h2>\n<p>\nThe following example shows the expected data layout and demonstrates support for groups of options.\n</p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "ff0bb652-0966-1ffd-ef4c-a37435ad8b4e",
    "parent": "9cc95ca2-44be-9720-c2a9-0431689c9c2f",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": "well"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "6a659a1b-b6df-b837-63f1-0a3ce947a952",
    "parent": "ff0bb652-0966-1ffd-ef4c-a37435ad8b4e",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "969b2c2e-b933-9211-9c41-121de1735665",
    "parent": "6a659a1b-b6df-b837-63f1-0a3ce947a952",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": "6"
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": "4"
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "6bd336a6-fcfe-382c-7082-f3508b53d29a",
    "parent": "969b2c2e-b933-9211-9c41-121de1735665",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "c080f0f0-5c15-914f-2347-ba7c12fc4396",
    "parent": "6bd336a6-fcfe-382c-7082-f3508b53d29a",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "singleFilterObj_group"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "13add4ee-97ad-b4ea-e246-8fd9637e5bb7",
    "parent": "6bd336a6-fcfe-382c-7082-f3508b53d29a",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "txt_singleSelectionObj_group"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "52ef2f8e-59d5-e49b-b550-0744e91a472b",
    "parent": "6a659a1b-b6df-b837-63f1-0a3ce947a952",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": "6"
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": "4"
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "13456a89-422b-4dc9-7492-1822caaeb167",
    "parent": "52ef2f8e-59d5-e49b-b550-0744e91a472b",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "9c045286-4480-85b4-be30-fd688702d493",
    "parent": "13456a89-422b-4dc9-7492-1822caaeb167",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "multiFilterObj_group"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "ae4e73ff-c186-eb7d-92f3-d7339257e696",
    "parent": "13456a89-422b-4dc9-7492-1822caaeb167",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "txt_multiSelectionObj_group"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "e2f2bc18-a0bf-7fd1-3e07-b42c83f8b621",
    "parent": "9cc95ca2-44be-9720-c2a9-0431689c9c2f",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "b1bd110d-127c-ddf9-7c13-bf3b6f7c03e4",
    "parent": "e2f2bc18-a0bf-7fd1-3e07-b42c83f8b621",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "95bcc078-acc1-35e1-dc35-2b9887e50e64",
    "parent": "b1bd110d-127c-ddf9-7c13-bf3b6f7c03e4",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "ac5bf50f-95dc-cff3-f5a4-9dad51ea59ed",
    "parent": "95bcc078-acc1-35e1-dc35-2b9887e50e64",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<h3>Expected data layout</h3>\n<p>\nBy default, the filter is expecting the columns in the folowing order:\n</p>\n<ol>\n    <li>Item Id</li>\n    <li>Item Label</li>\n    <li>Group Id</li>\n    <li>Group Label</li>\n</ol>\n</p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "46651f0d-f8f4-b962-b899-5abe246d8dcd",
    "parent": "b1bd110d-127c-ddf9-7c13-bf3b6f7c03e4",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "tableObj_groups"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   }
  ],
  "title": "CDF - Sample structure"
 }
}