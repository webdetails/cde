{
 "layout": {
  "title": "CDF - Sample structure",
  "rows": [
   {
    "id": "1a506cb6-b24c-c11b-d9f1-a12864ecde5b",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "templateCSS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "${solution:../../template.css}",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     }
    ]
   },
   {
    "id": "9657518a-5535-12d1-2ff3-95525f706312",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "referenceCSS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "${solution:../../cdeReference.css}",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     }
    ]
   },
   {
    "id": "151383e3-f3e3-82c8-49c8-913f96718050",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "Headers",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "WDheader",
      "type": "String"
     }
    ]
   },
   {
    "id": "e9323c6f-f014-946d-bb3d-067fe35470a3",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "WDdataCellHeader",
      "type": "String"
     }
    ]
   },
   {
    "id": "b4535e82-0f89-fc43-2eb7-baadc39313bf",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "e9323c6f-f014-946d-bb3d-067fe35470a3",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "24",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "4ddb4a60-e415-53b1-0ca9-c25f028654f8",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "b4535e82-0f89-fc43-2eb7-baadc39313bf",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "Raphael Component ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "0fb40524-f305-7953-4135-89e9f277068a",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "Row1",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "300",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "WDdataCellBody",
      "type": "String"
     }
    ]
   },
   {
    "id": "bcaeeb34-bf4f-a783-02fa-a56f78e3f123",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "0fb40524-f305-7953-4135-89e9f277068a",
    "properties": [
     {
      "name": "name",
      "value": "column1",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "24",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": [
   {
    "id": "CUSTOMCOMPONENTS",
    "name": "Custom",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Custom",
      "type": "Label"
     }
    ]
   },
   {
    "id": "b330688d-ea63-61a9-2163-36be794d6070",
    "type": "ComponentsraphaelComponent",
    "typeDesc": "Raphael Component",
    "parent": "CUSTOMCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "raph1",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "customfunction",
      "value": "function f(){\n\n   Raphael.fn.pieChart = function (cx, cy, r, values, labels, stroke) {\n        var paper = this,\n            rad = Math.PI / 180,\n            chart = this.set();\n        function sector(cx, cy, r, startAngle, endAngle, params) {\n            var x1 = cx + r * Math.cos(-startAngle * rad),\n                x2 = cx + r * Math.cos(-endAngle * rad),\n                y1 = cy + r * Math.sin(-startAngle * rad),\n                y2 = cy + r * Math.sin(-endAngle * rad);\n            return paper.path([\"M\", cx, cy, \"L\", x1, y1, \"A\", r, r, 0, +(endAngle - startAngle > 180), 0, x2, y2, \"z\"]).attr(params);\n        }\n        var angle = 0,\n            total = 0,\n            start = 0,\n            colors = [\"#1E90FF\", \"#FF6347\", \"#32CD32\"],\n            process = function (j) {\n                var value = values[j],\n                    angleplus = 360 * value / total,\n                    popangle = angle + (angleplus / 2),\n                    color = colors[j],\n                    ms = 500,\n                    delta = 30,\n                    bcolor = Raphael.hsb(start, 1, 10),\n                    p = sector(cx, cy, r, angle, angle + angleplus,{fill: \"90-\" + bcolor + \"-\" + color, stroke: stroke, \"stroke-width\": 3}),\n                    txt = paper.text(cx + (r + delta + 55) * Math.cos(-popangle * rad), cy + (r + delta + 25) * Math.sin(-popangle * rad), labels[j]).attr({fill: colors[j], stroke: \"none\", opacity: 0, \"font-size\": 20});\n                p.mouseover(function () {\n                    p.stop().animate({transform: \"s1.1 1.1 \" + cx + \" \" + cy}, ms, \"elastic\");\n                    txt.stop().animate({opacity: 1}, ms, \"elastic\");\n                }).mouseout(function () {\n                    p.stop().animate({transform: \"\"}, ms, \"elastic\");\n                    txt.stop().animate({opacity: 0}, ms);\n                });\n                angle += angleplus;\n                chart.push(p);\n                chart.push(txt);\n                start += .1;\n            };\n        for (var i = 0, ii = values.length; i < ii; i++) {\n            total += values[i];\n        }\n        for (i = 0; i < ii; i++) {\n            process(i);\n        }\n        return chart;\n    };\n\n    var values = [30, 50, 20],\n        labels = [\"Work\", \"Sleep\", \"Fun\"];\n\n    Raphael(this.htmlObject, this.height, this.width)\n        .pieChart(200, 150, 80, values, labels, \"#222\");\n}\n ",
      "type": "JavaScript"
     },
     {
      "name": "dataSource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "height",
      "value": "400",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "width",
      "value": "400",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${h:column1}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   }
  ]
 },
 "datasources": {
  "rows": []
 },
 "filename": "/public/plugin-samples/pentaho-cdf-dd/pentaho-cdf-dd-require/tests/Raphael/raphael.cdfde"
}
