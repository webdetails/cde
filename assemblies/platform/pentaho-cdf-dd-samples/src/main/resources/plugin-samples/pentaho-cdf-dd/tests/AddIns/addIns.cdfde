{
 "components": {
  "rows": [
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Others"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "895acc62-a7cc-e854-5b14-d60a2ffa12e8",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "Sparkline"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "Array",
      "value": "[\"string\",\"sparkline\",\"sparkline\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "sparklineQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:SparklineObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n   \n    this.setAddInOptions(\"colType\",\"sparkline\",function(state){\n\n        // Let's turn the second sparkline into a bar\n        if(state.colIdx == \"2\"){\n            return {\n                type:'bar',\n                width: '250'\n            };\n        }\n    });\n}"
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "631dcc13-c33e-88e4-413b-51860c31c32e",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "dataBar"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "Array",
      "value": "[\"string\",\"dataBar\",\"dataBar\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "dataBarQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:DataBarObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n   \n    this.setAddInOptions(\"colType\",\"dataBar\",function(state){\n\n        // Let's turn the second sparkline into a bar\n        if(state.colIdx == \"2\"){\n            return {includeValue:true, widthRatio: 0.8, startColor: \"green\",endColor: \"red\", absValue: false};\n        }\n    });\n}"
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "60d065ed-c39f-e906-e133-3f4f845d8759",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "groupHeaders"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "Array",
      "value": "[\"groupHeaders\",\"groupHeaders\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "groupHeadersQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:groupHeadersObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n   \n    var arr = [], cd = this.chartDefinition;\n      for (var i=0; i < cd.colTypes.length; i++){ \n          if (cd.colTypes[i] === \"groupHeaders\"){\n            arr.push([i, \"asc\"]);\n          }\n      }\n    this.extraOptions.push( [ 'aaSortingFixed' , arr ] ); \n\n\n}"
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "e35a05ab-5c18-ef10-d3b4-4dda2f7ade89",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "trendArrow"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[null,null,\"%.2f\"]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "Array",
      "value": "[\"string\",\"trendArrow\",\"trendArrow\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "trendArrowQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:TrendArrowObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n    this.setAddInOptions(\"colType\",\"trendArrow\",function(state){\n        // Let's turn the second sparkline into a bar\n        if(state.colIdx == \"2\"){\n            return {\n                includeValue: true,\n                good: false,\n                valueFormat: function(v,format,st) {\n                    return format != null\n                        ? require(\"cdf/dashboard/Sprintf\")(format, v) + \"&euro;\"\n                        : \"\";\n                }\n            };\n        }\n    });\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "951f50ae-b7c2-dff0-0e6b-1532ed2318b8",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "hyperlink"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "Array",
      "value": "[\"string\",\"hyperlink\",\"hyperlink\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "hyperlinkQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:HyperlinkObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n   \n    this.setAddInOptions(\"colType\",\"hyperlink\",function(state){\n        if(state.colIdx == \"2\"){\n            return { regexp: \".*webdetails.org\"};\n        }\n    });\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "dc7db903-05b3-a145-7757-8ec980d366d9",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "pvSparkline"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "Array",
      "value": "[\"string\",\"pvSparkline\",\"pvSparkline\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "sparklineQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:PvSparklineObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n   \n    this.setAddInOptions(\"colType\",\"pvSparkline\",function(state){\n\n        // Let's turn the second sparkline into a bar\n        if(state.colIdx == \"2\"){\n            return {lineWidth:2,strokeStyle:\"red\"};\n        }\n    });\n}"
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "fc2a090b-0e09-5606-8946-cffc1eeef42c",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "circle"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "ColType",
      "value": "[\"string\",\"circle\",\"circle\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "circleQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:CircleObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n   \n    this.setAddInOptions(\"colType\",\"circle\",function(state){\n\n        // Let's turn the second sparkline into a bar\n        if(state.colIdx == \"2\"){\n            return {\n              radius: function(st){return 2  + 3 * st.value/100;},\n              color: function(st) {\n                var red = Math.min(255,Math.round(510 - 2 * 255 * st.value/100)),\n                  green = Math.min(255,Math.round(2 * 255 * st.value/100));\n                return \"rgb(\" + red + \",\" + green + \",0)\";  \n              }\n            }\n        }\n    });\n}"
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "f160f5a7-eec3-05b8-57c9-dbc52f47496d",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "textFormat"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[null,\"%.2f%%\"]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "ColType",
      "value": "[\"string\",\"formattedText\",\"formattedText\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "formattedTextQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:textFormatObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n   \n    this.setAddInOptions(\"colType\",\"formattedText\",function(state){\n\n        if(state.colIdx == \"2\"){\n            return {\n              textFormat: function(v, st) {\n                return \"<span style='font-size:80%;margin:3px;text-align:right;padding:2px;background:blue;border-radius:3px;color:white;'>\"+ v +\"</span>\"\n              }\n            }\n        }\n    });\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   },
   {
    "id": "48653bcb-9e0b-97dc-e135-ae24ce746b72",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "bulletChart"
     },
     {
      "name": "expandContainerObject",
      "type": "String",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "oLanguage",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "language",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "colFormats",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colHeaders",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colSortable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "colTypes",
      "type": "ColType",
      "value": "[\"String\",\"cccBulletChart\",\"cccBulletChart\"]"
     },
     {
      "name": "colWidths",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "expandParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "displayLength",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "expandOnClick",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "filter",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "info",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "lengthChange",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "paginate",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "sort",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "colSearchable",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "drawCallback",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "bulletChartQuery"
     },
     {
      "name": "sDom",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "sortBy",
      "type": "SortByArray",
      "value": "[]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "paginationType",
      "type": "PaginationType",
      "value": "two_button"
     },
     {
      "name": "tableStyle",
      "type": "TableStyle",
      "value": "classic"
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:bulletChartObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "paginateServerside",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n   \n    this.setAddInOptions(\"colType\",\"cccBulletChart\",function(state){\n\n        if(state.colIdx == \"2\"){\n            return {\n              chartOptions: {\n                extensionPoints: {\n                  \"bulletMarker_shape\":[\"triangle\",\"square\"][state.rowIdx % 2],\n                  \"bulletTitle_textStyle\":\"green\",\n                  \"bulletMeasure_fillStyle\":\"blue\",\n                  \"bulletRuleLabel_font\":\"8px sans-serif\",\n                  \"bulletRule_height\": 5\n                }\n              }\n            }\n        }\n    });\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "clickAction",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsTable",
    "typeDesc": "table Component"
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "SCRIPTING",
    "name": "SCRIPTING Queries",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "SCRIPTING Queries"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "509ef380-c804-e7e2-ea71-87dc23ae677f",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "sparklineQuery"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Name\",\n\"Default Sparkline\",\n\"Custom Sparkline\"\n};\n\n\nClass[] columnTypes = new Class[]{\nString.class\n,String.class\n,String.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(\"Row 1\")\n,new String(\"17,20,20,8,43,13,16,23,11,12,43,40\")\n,new String(\"37,40,30,23,50,23,14,15,17,25,33,23\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 2\")\n,new String(\"37,40,30,23,50,23,14,15,17,25,33,23\")\n,new String(\"37,40,30,23,50,23,14,15,17,25,33,23\")\n});\n\n\nreturn model;"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "9cb0f1d7-4bce-e447-fc9c-0672e15c6ad6",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "dataBarQuery"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Name\",\n\"Default barData\",\n\"Custom barData\"\n};\n\n\nClass[] columnTypes = new Class[]{\nString.class\n,Float.class\n,Float.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(\"Row 1\")\n,new Float(\"26\") ,new Float(\"50\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 2\")\n,new Float(\"30\") ,new Float(\"77\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 3\")\n,new Float(\"14.5\") ,new Float(\"-65\")\n});\n\n\nreturn model;\n\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "a4bca940-80a0-7286-2b65-08a976ff06f6",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "groupHeadersQuery"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Group1\",\n\"Group2\",\n\"Data Column 1\",\n\"Data Column 2\"\n};\n\n\nClass[] columnTypes = new Class[]{\nString.class\n,String.class\n,Float.class\n,Float.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(\"AAA\"), new String(\"aaa\")\n,new Float(\"-26\") ,new Float(\"50\")\n});\nmodel.addRow(new Object[]{ new String(\"AAA\"), new String(\"ccc\")\n,new Float(\"6\") ,new Float(\"-32\")\n});\nmodel.addRow(new Object[]{ new String(\"BBB\"), new String(\"aaa\")\n,new Float(\"2\") ,new Float(\"23\")\n});\nmodel.addRow(new Object[]{ new String(\"BBB\"), new String(\"bbb\")\n,new Float(\"34\") ,new Float(\"91\")\n});\nmodel.addRow(new Object[]{ new String(\"AAA\"), new String(\"aaa\")\n,new Float(\"14\") ,new Float(\"14\")\n});\nmodel.addRow(new Object[]{ new String(\"AAA\"), new String(\"aaa\")\n,new Float(\"90\") ,new Float(\"-50\")\n});\nmodel.addRow(new Object[]{ new String(\"AAA\"), new String(\"bbb\")\n,new Float(\"5\") ,new Float(\"50\")\n});\nmodel.addRow(new Object[]{ new String(\"BBB\"), new String(\"ccc\")\n,new Float(\"-46\") ,new Float(\"10\")\n});\nmodel.addRow(new Object[]{ new String(\"BBB\"), new String(\"aaa\")\n,new Float(\"26\") ,new Float(\"5\")\n});\n\n\n\n\nreturn model;\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "f6c26306-390c-560f-81d5-7c3b776b5c68",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "trendArrowQuery"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Name\",\n\"Default trendArrow\",\n\"Custom trendArrow\"\n};\n\n\nClass[] columnTypes = new Class[]{\nString.class\n,Float.class\n,Float.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(\"Row 1\")\n,new Float(\"26\") ,new Float(\"50\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 2\")\n,new Float(\"-30\") ,new Float(\"77\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 3\")\n,new Float(\"-14.5\") ,new Float(\"-65\")\n});\n\n\nreturn model;\n\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "9eafca94-5c8a-1d20-d12f-3824def5d116",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "hyperlinkQuery"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Name\",\n\"Default hyperlink\",\n\"Custom hyperlink\"\n};\n\n\nClass[] columnTypes = new Class[]{\nString.class\n,String.class\n,String.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(\"Row 1\")\n,new String(\"www.webdetails.org\") ,new String(\"www.webdetails.pt\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 2\")\n,new String(\"ctools.webdetails.org\") ,new String(\"http://ctools.webdetails.org\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 3\")\n,new String(\"cdf.webdetails.org\") ,new String(\"cde.webdetails.org\")\n});\n\n\nreturn model;\n\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "0f6de80f-4f50-087a-2259-382d981aa33b",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "circleQuery"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Name\",\n\"Default circle\",\n\"Custom circle\"\n};\n\n\nClass[] columnTypes = new Class[]{\nString.class\n,Float.class\n,Float.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(\"Row 1\")\n,new Float(\"1.26\") ,new Float(\"0\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 2\")\n,new Float(\"33.0\") ,new Float(\"30\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 3\")\n,new Float(\"14.5\") ,new Float(\"50.49\")\n});\n\nmodel.addRow(new Object[]{ new String(\"Row 4\")\n,new Float(\"14.5\") ,new Float(\"70\")\n});\n\nmodel.addRow(new Object[]{ new String(\"Row 5\")\n,new Float(\"14.5\") ,new Float(\"100\")\n});\n\nreturn model;\n\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "93c2b4e6-5dbe-f3e7-3511-87b2b6a7fcc2",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "formattedTextQuery"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Name\",\n\"Default format\",\n\"Custom custom\"\n};\n\n\nClass[] columnTypes = new Class[]{\nString.class\n,Float.class\n,Float.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(\"Row 1\")\n,new Float(\"1.26\") ,new Float(\"0.21\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 2\")\n,new Float(\"33.0\") ,new Float(\"30.25\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 3\")\n,new Float(\"14.5\") ,new Float(\"50.49\")\n});\n\nreturn model;\n\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "a5aeedfb-2574-69c6-c878-5397c0d35d82",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "bulletChartQuery"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Name\",\n\"Default bulletChart\",\n\"Custom bulletChart\"\n};\n\n\nClass[] columnTypes = new Class[]{\nString.class\n,String.class\n,String.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(\"Row 1\")\n,new String(\"'',30,50\") ,new String(\"'','',40,30,20,40,100\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 2\")\n,new String(\"'',60,40\") ,new String(\"'','',30,40,30,35,50\")\n});\n\n\nmodel.addRow(new Object[]{ new String(\"Row 3\")\n,new String(\"'',70,35\") ,new String(\"'','',100,110,50,150,200\")\n});\n\nreturn model;\n\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   }
  ]
 },
 "filename": "/public/plugin-samples/pentaho-cdf-dd/pentaho-cdf-dd-require/tests/AddIns/addIns.cdfde",
 "layout": {
  "rows": [
   {
    "id": "6b92846b-526c-cb97-0949-4551f920ae12",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "template"
     },
     {
      "name": "resourceFile",
      "type": "ResourceFile",
      "value": "${res:../../template.css}"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Css"
     }
    ],
    "type": "LayoutResourceFile",
    "typeDesc": "Resource"
   },
   {
    "id": "55291303-7ccc-8404-9694-82a427f612a8",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "AddInDefaults"
     },
     {
      "name": "resourceCode",
      "type": "Resource",
      "value": "dashboard.setAddInDefaults(\"Table\",\"colType\",\"sparkline\",\n{\n    fillColor:\"#aaaaaa\",\n    width: \"150\"\n});"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Javascript"
     }
    ],
    "type": "LayoutResourceCode",
    "typeDesc": "Resource"
   },
   {
    "id": "03a83220-159d-d841-c40d-0a04044f3e51",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "css"
     },
     {
      "name": "resourceFile",
      "type": "ResourceFile",
      "value": "${res:../../cdeReference.css}"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Css"
     }
    ],
    "type": "LayoutResourceFile",
    "typeDesc": "Resource"
   },
   {
    "id": "7746f3c7-ccfb-9cba-b7cd-f5dae17d6a63",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "Spacer"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": "20"
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "23974863-0f28-ff9c-62f8-30c632ba973d",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "Title"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDheader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "9e153dff-b071-01a0-54dd-3666a857debe",
    "parent": "23974863-0f28-ff9c-62f8-30c632ba973d",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "AddIns reference "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": "18"
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "2d99f333-9735-6b03-85d5-93d4a0142d07",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "DescriptionBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "46e27ef7-a339-d5fb-0d0f-728bdaec0476",
    "parent": "2d99f333-9735-6b03-85d5-93d4a0142d07",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<p>AddIns are CDF's extension points. Can be used in any component to be able to fine-control\nthat component and extend it in a very simple way</p>\n\n<p>The use case for this concept is TableComponent's colType. Tables are a fundamental piece of \ndashboards / visualizations and there needs to be simple ways to extend the ways they are rendered</p>\n\n\n<div class=\"WDh2\">AddIn Implementation</div>\n\n<p>\n\nIn order to implement an AddIn, you need to create an object like the following:\n\n<blockquote><pre>\nrequire([\"cdf/Dashboard.Clean\"], function(Dashboard) {\n  var sparkline = {\n    name: \"sparkline\",\n    label: \"Sparkline\",\n    defaults: {\n      type: 'line'\n    },\n    init: function(){\n        \n      // Register this for datatables sort\n      var myself = this;\n      $.fn.dataTableExt.oSort[this.name+'-asc'] = function(a,b){\n        return myself.sort(a,b)\n      };\n      $.fn.dataTableExt.oSort[this.name+'-desc'] = function(a,b){\n        return myself.sort(b,a)\n      };     \n    }, \n    sort: function(a,b){\n      return this.sumStrArray(a) - this.sumStrArray(b);\n    }, \n    sumStrArray: function(arr){\n      return arr.split(',').reduce(function(prev, curr, index, array){  \n        return parseFloat(curr) + (typeof(prev)==='number'?prev:parseFloat(prev));\n      });\n    },\n\n    implementation: function (tgt, st, opt) {\n      var t = $(tgt);\n      t.sparkline(st.value.split(/,/),opt);\n      t.removeClass(\"sparkline\");\n    }\n  };\n\nDashboard.registerGlobalAddIn(\"Table\", \"colType\", new AddIn(sparkline));\n});\n</blockquote></pre>\n\n<i>name</i>, <i>label</i>, <i>defaults</i>, <i>init</i> and <i>implementation</i> are the important bits\nhere. This specific code is an implementation of a sparkline using the jquery plugin. \n</p>\n\n\n<div class=\"WDh2\">Setting options</div>\n\n<p>\nOptions are passed on a per component basis, usually in the component's preExecution function.\nIt can either be a static list of options that will be merged with the defaults or a function\nwhere the options change according to the state\n\n<blockquote><pre>\nfunction f(){\n \n    // Option 1 :Static list\n\n    this.setAddInOptions(\"colType\",\"sparkline\",{barColor: \"red\"});\n \n    // option 2: function\n    this.setAddInOptions(\"colType\",\"sparkline\",function(state){\n        // Let's turn the second sparkline into a bar\n        if(state.colIdx == \"2\"){\n            return { type:'bar'};\n        }\n    });\n}\n</blockquote></pre>\n</p>\n\n\n<div class=\"WDh2\">Setting defaults</div>\n\n<p>\nIt's also possible to set a site/dashboard wide defaults, and like the previous\noption, can either be a static list or a function\n\n<blockquote><pre>\ndashboard.setAddInDefaults(\"Table\",\"colType\",\"sparkline\",{fillColor:\"#aaa\"});\n\ndashboard.setAddInDefaults(\"Table\",\"colType\",\"sparkline\",function(state){ \n    return state.rowIdx%2?{fillColor:\"#aaa\"}:{fillColor:\"#fff\"};\n});\n\n\n</blockquote></pre>\n</p>\n\n\n<div class=\"WDh2\">Implementation arguments</div>\n\n<p>\n<i>implementation</i> function has the following arguments:\n\n<blockquote><pre>\n    implementation: function (tgt, st, opt) {}\n</blockquote></pre>\n\n<dl>\n    <dt>tgt</dt>\n    <dd>target - Target for the action. eg: On a cellType, it will be the td cell </dt>\n    \n    <dt>state</dt>\n    <dd>state - Information about the specific addin call. On a cellType will be an object\n    with: <i>{rawData, tableData, colIdx, rowIdx, series, category, value, colFormat}</i> </dt>\n\n    <dt>opt</dt>\n    <dd>options passed to this addIn</dt>\n    \n</dl>\n\n</p>\n\n<div class=\"WDh2\">Calling AddIns from components</div>\n\n<p>\n\nWhen developing a component, it's very easy to define a new AddIn type. Here's the example\nthat TableComponent uses:\n\n<blockquote><pre>\n    var addIn = myself.getAddIn(\"colType\",colType);\n    addIn.call(td,state,myself.getAddInOptions(\"colType\",addIn.getName()));\n</blockquote></pre>\n\nFrom this point on, there will be a new <i>colType</i> available to register \n\n</p>\n\n "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "3373d2ed-9187-cecd-8cae-44ebdcf70ce5",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "SupportedAddinsTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDh1"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "410cd2fc-be4b-8d1b-c83a-016744d39a9c",
    "parent": "3373d2ed-9187-cecd-8cae-44ebdcf70ce5",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Supported AddIns - Table \"colType\" "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "b9afdccd-d812-3d05-e922-8d96f0f39411",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "SparklineTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "b3705ed9-c519-d1f9-8a37-b520af3742ca",
    "parent": "b9afdccd-d812-3d05-e922-8d96f0f39411",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "sparkline "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "c2b51a60-0d9d-491d-e46f-2a2bf806920e",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "SparklineBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "100379ee-749c-6807-e780-83f2aa5d6a79",
    "parent": "c2b51a60-0d9d-491d-e46f-2a2bf806920e",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "SparklineDesc"
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "beb3d1ff-2ad9-4492-c12c-076fd30efc24",
    "parent": "100379ee-749c-6807-e780-83f2aa5d6a79",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "SparklineDescHtml"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "93803b56-0c3f-b074-276c-8852b2c2086a",
    "parent": "beb3d1ff-2ad9-4492-c12c-076fd30efc24",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>sparkline</i> is an implementation of the \n<a href=\"http://www.omnipotent.net/jquery.sparkline/\" target=\"_blank\">JQuery Sparkline plugin</a>.\nCheck this page for full reference.\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p>\n    It expects a CSV column with numbers, eg: 12,34.2,23,45\n </p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n     defaults: {\n      type: 'line'\n    }     \n </pre></blockquote>\n </p>\n\n  <div class=\"WDh2\">Sample</div>\n  \n <p>\n This sample contains 2 columns, a default one and one with specific options: {type:'bar'}\n \n </p>\n \n </p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "6f234863-6533-d299-394c-986b3dcf478f",
    "parent": "100379ee-749c-6807-e780-83f2aa5d6a79",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "SparklineObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "6b969f76-b323-4ae2-e012-3ce3c6f4a179",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "PvSparklineTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "b959321d-ab82-4acc-b582-a62691506f95",
    "parent": "6b969f76-b323-4ae2-e012-3ce3c6f4a179",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "pvSparkline "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "4d5bf12c-6334-b8a3-e8f4-17e936f6cbc8",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "PvSparklineBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "f2fedb67-dcef-f41a-1aa4-2357659c6ac0",
    "parent": "4d5bf12c-6334-b8a3-e8f4-17e936f6cbc8",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "099a0f42-d5ef-98c9-2126-6bb337566e32",
    "parent": "f2fedb67-dcef-f41a-1aa4-2357659c6ac0",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "PvSparklineDesc"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "10310df8-74b6-60b2-65bb-4dfa71d6b0ae",
    "parent": "099a0f42-d5ef-98c9-2126-6bb337566e32",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>pvSparkline</i> is a simple implementation of sparklines in \n<a href=\"http://mbostock.github.com/protovis/\">Protovis</a>.\n\nCheck this page for full reference.\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p>\n    It expects a CVS column with numbers, eg: 12,34.2,23,45\n </p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n    defaults: {\n      height: 10,\n      strokeStyle: \"#000\",\n      lineWidth: 1,\n      width: undefined,\n      canvasMargin: 2\n    }     \n </pre></blockquote>\n </p>\n\n  <div class=\"WDh2\">Sample</div>\n  \n <p>\n This sample contains 2 columns, a default one and one with specific options: {lineWidth:2,strokeStyle:\"red\"}\n \n </p>\n \n </p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "bfe0ad39-95b9-1a7b-3965-6302752df9dd",
    "parent": "f2fedb67-dcef-f41a-1aa4-2357659c6ac0",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "PvSparklineObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "5891483b-222c-0850-3005-7be3d815ec04",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "DataBarTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "a14f8a68-30ce-f996-ea4c-dd71e61a3062",
    "parent": "5891483b-222c-0850-3005-7be3d815ec04",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "dataBar "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "864537cb-c40a-483c-7319-d49d5e6c8cd5",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "DataBarBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "6286a1f6-a39e-726f-4bd4-7e56295af0de",
    "parent": "864537cb-c40a-483c-7319-d49d5e6c8cd5",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "2982eacd-4bea-8d45-6ec2-f7a08ae883bb",
    "parent": "6286a1f6-a39e-726f-4bd4-7e56295af0de",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "DataBarDesc"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "337b7bfa-ba65-8c75-d684-748092b391c3",
    "parent": "2982eacd-4bea-8d45-6ec2-f7a08ae883bb",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>dataBar</i> turn a numeric cell into a bar. By default, maximum is the column's absolute max and minimum is 0.\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p>\n    It expects a numeric value, eg: 42.5\n </p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n    defaults: {\n      widthRatio:1,\n      height: 10,\n      startColor: \"#55A4D6\",\n      endColor: \"#448FC8\",\n      stroke: null,\n      max: undefined,\n      min: undefined,\n      absValue: true,\n      includeValue: false,\n      valueFormat: function(v, format, st) {\n        return \"\" + require(\"cdf/dashboard/Sprintf\")(format || \"%.1f\", v);\n      }\n    }\n </pre></blockquote>\n </p>\n\n  <div class=\"WDh2\">Sample</div>\n  \n <p>\n This sample contains 2 columns, a default one and one with specific options: \n <pre>\n    {\n      includeValue:true,\n      widthRatio: 0.8,\n      startColor: \"green\",\n      endColor: \"red\",\n      absValue:false\n    } \n </pre>\n </p>\n \n </p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "82b71465-a15f-54bc-c1ba-6c15012cab2b",
    "parent": "6286a1f6-a39e-726f-4bd4-7e56295af0de",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "DataBarObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "6b70c6bd-5721-1343-b078-f14750f8d3fb",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "TrendArrowTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "c4a65149-06de-8d3c-c3df-5404ab0fff4a",
    "parent": "6b70c6bd-5721-1343-b078-f14750f8d3fb",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "trendArrow "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "61ffafc8-bc82-6efe-dfac-b3bef0f8832f",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "TrendArrowBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "8cd46af4-b2e8-25da-5759-51c36e4173ab",
    "parent": "61ffafc8-bc82-6efe-dfac-b3bef0f8832f",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "3fc61d2d-bfa5-9881-de7f-fa5ea2ba61c8",
    "parent": "8cd46af4-b2e8-25da-5759-51c36e4173ab",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "TrendArrowDesc"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "35bf3f56-b114-a17b-ff31-9f5177575621",
    "parent": "3fc61d2d-bfa5-9881-de7f-fa5ea2ba61c8",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>trendArrow</i> adds a trend arrow to a numeric cell.\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p>\n    It expects a numeric value, eg: 42.5\n </p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n    defaults: {\n      includeValue: false,\n      good: true,\n      valueFormat: function(v, format, st) {\n        return require(\"cdf/dashboard/Sprintf\")(format || \"%.1f\", v);\n      }\n    }\n </pre></blockquote>\n </p>\n\n <div class=\"WDh2\">Sample</div>\n  \n <p>\n This sample contains 2 columns, one with default options, and the other configured to\n display a difference between spending and budget: downwards trends are good, and\n we display the value formatted as currency:\n <pre>\n    {\n      includeValue: true,\n      good: false,\n      valueFormat: function(v, format, st) { return require(\"cdf/dashboard/Sprintf\")(format, v) + \"&amp;euro;\";}\n    }\n</pre>\n</p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "a8f42ded-3d81-1c6e-7041-9c9575441dd2",
    "parent": "8cd46af4-b2e8-25da-5759-51c36e4173ab",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "TrendArrowObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "6aaf56ca-78f1-657e-26a8-d4549d5b7767",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "HyperlinkTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "fa2c2409-08aa-eb7d-ecd8-2269c7da4171",
    "parent": "6aaf56ca-78f1-657e-26a8-d4549d5b7767",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "hyperlink "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "8e4db190-94b4-451a-411a-ed33daad04bf",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "HyperlinkBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "38d2e3dd-7dcf-4e0b-a523-927516bebb6a",
    "parent": "8e4db190-94b4-451a-411a-ed33daad04bf",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "c6cc7bd3-66b4-3fe3-ab0b-17be29d9e9ef",
    "parent": "38d2e3dd-7dcf-4e0b-a523-927516bebb6a",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "HyperlinkDesc"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "647ebbe0-cd05-4878-ae4f-10e363816f4f",
    "parent": "c6cc7bd3-66b4-3fe3-ab0b-17be29d9e9ef",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>hyperlink</i> turns a cell into a clickable link. Specific styling can be formatted with CSS\n\nIf a regexp is given, it will only be applied if the text matches it.\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p>\n    It expects a URI string, eg: http://www.webdetails.pt\n </p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n    defaults: {\n      openInNewTab: true,\n      prependHttpIfNeeded: true,\n      regexp: null\n    }\n </pre></blockquote>\n </p>\n\n  <div class=\"WDh2\">Sample</div>\n  <p>For the second column, only links ending with webdetails.org are valid.</p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "78f45a2a-d514-ae1a-9298-3c0cb80c1f66",
    "parent": "38d2e3dd-7dcf-4e0b-a523-927516bebb6a",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "HyperlinkObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "fa30e91d-d914-bed2-a780-fa44485695ee",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "CircleTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "88e656b0-23ca-adb6-a06b-1a4eb472c03d",
    "parent": "fa30e91d-d914-bed2-a780-fa44485695ee",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Circle "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "ecba93ce-a3d9-ff49-7f5d-dee33dc6cbe0",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "CircleBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "eb29c1d7-950b-543f-5499-54775cc63623",
    "parent": "ecba93ce-a3d9-ff49-7f5d-dee33dc6cbe0",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "a87c78ce-d70a-f008-0663-b8608140a85d",
    "parent": "eb29c1d7-950b-543f-5499-54775cc63623",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "CircleDesc"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "e8ca3c52-4b3a-c734-53b3-c49dc13c350c",
    "parent": "a87c78ce-d70a-f008-0663-b8608140a85d",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>Circle</i> turns a cell into a circle that can display data as either circle radius or color.\n\nBy default, this display a black, 4px radius circle. The radius and color property can be changed\nto either fixed values or functions.\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p>\n    Circle doesn't have any particular expectations over the data provided, though numeric\n    values are obviously easiest to map to radii/colors.\n </p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n    defaults: {\n      canvasSize: 10,\n      radius: 4,\n      color: 'black',\n      title: function(st) {return \"Value: \" + st.value;}\n    }\n </pre></blockquote>\n </p>\n\n  <div class=\"WDh2\">Sample</div>\n  \n <p>\n This sample contains 2 columns, a default one and one with specific options:<br>\n       <pre>\n    {\n      radius: function(st){return 2  + 3 * st.value/100;},\n      color: function(st) {\n                var red = Math.min(255,Math.round(510 - 2 * 255 * st.value/100)),\n                  green = Math.min(255,Math.round(2 * 255 * st.value/100));\n        return \"rgb(\" + red + \",\" + green + \",0)\";\n      }\n    }</pre>\n       \n </p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "840d2f20-2d81-3be4-23f1-3ea3b3681c7e",
    "parent": "eb29c1d7-950b-543f-5499-54775cc63623",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "CircleObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "6e7ca070-0e2f-ad92-01fd-57f6844fbb7e",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "textFormatTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "dd6e159f-e764-fc7a-4e4b-4848e9bcd2dd",
    "parent": "6e7ca070-0e2f-ad92-01fd-57f6844fbb7e",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "formattedText "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "bf5cef68-aa89-2a23-05ad-099fc6036c61",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "textFormatBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "679bfb40-f6ec-b35a-8098-e1283d431057",
    "parent": "bf5cef68-aa89-2a23-05ad-099fc6036c61",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "663befdc-7e93-5284-ff07-efd520961204",
    "parent": "679bfb40-f6ec-b35a-8098-e1283d431057",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "textFormatDesc"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "059114a4-0852-5c13-5bc6-6c31637d8917",
    "parent": "663befdc-7e93-5284-ff07-efd520961204",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>formattedText</i> is a general-purpose text-formatting AddIn. It defaults to a simple format\nthat preserves the colFormat formatting.\n\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p><i>formattedText</i> can handle any sort of textual data, with the specific format\n implemented setting the details of what its input should look like.\n </p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n    defaults: {\n      textFormat: function(v, st) {\n        return st.colFormat\n          ? require(\"cdf/dashboard/Sprintf\")(st.colFormat, v)\n          : v;\n      }\n    }\n </pre></blockquote>\n </p>\n\n  <div class=\"WDh2\">Sample</div>\n  \n <p>\n This sample contains 2 columns, a default colFormat-formatted number and another that wraps the\n text in a blue box using the following options:\n <pre>\n    {\n      textFormat: function(v, st) {\n        return \"&lt;span style='font-size:80%;margin:3px;text-align:right;\" + \n          \"padding:2px;background:blue;border-radius:3px;color:white;'&gt;\" +\n          v +\"&lt;/span&gt;\"\n      }\n    }\n</pre></p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "262a46a1-5e84-6993-2325-ff0565b5b1d7",
    "parent": "679bfb40-f6ec-b35a-8098-e1283d431057",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "textFormatObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "d65c1f1e-4c78-c2c5-3637-3ddbf4b8cb96",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "bulletChartTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "fc58a5ba-873e-24e0-f737-3d4d27a97a39",
    "parent": "d65c1f1e-4c78-c2c5-3637-3ddbf4b8cb96",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "cccBulletChart "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "69af361b-afa1-b041-98a0-217a568f08ff",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "bulletChartBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "440fe4ae-ac25-0742-2080-201451940b95",
    "parent": "69af361b-afa1-b041-98a0-217a568f08ff",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "8bf60897-84f2-ee40-caba-dd3da8e1c8b8",
    "parent": "440fe4ae-ac25-0742-2080-201451940b95",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "bulletChartDesc"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "4592c10b-73ba-8f2d-7355-2e225699b29f",
    "parent": "8bf60897-84f2-ee40-caba-dd3da8e1c8b8",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>cccBulletChart</i> renders a CCC Bullet Chart inside the table cell. Please refer to the\nCCC documentation for particulars on the Chart's configuration.\n\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p><i>cccBulletChart</i> expects a string containing a comma-separated list of values that\n conform to one of the formats described in the cccBulletChart documentation.</p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n    defaults: {\n      chartOptions: {\n        height: 40,\n        animate: false,\n        orientation: \"horizontal\",\n        bulletSize: 16,\n        bulletSpacing: 150,\n        bulletMargin: 5,\n        bulletRanges: [30,80,100],\n        extensionPoints: {\n          \"bulletMarker_shape\":\"triangle\",\n          \"bulletTitle_textStyle\":\"green\",\n          \"bulletMeasure_fillStyle\":\"black\",\n          \"bulletRuleLabel_font\":\"8px sans-serif\",\n          \"bulletRule_height\": 5\n        }\n      }\n      ...\n    }\n </pre></blockquote>\n </p>\n\n  <div class=\"WDh2\">Sample</div>\n  \n <p>\n This sample contains 2 columns, a default cccBulletChart that's being fed three columns\n (label, value, target) and another that's being passed 6 columns (label, subtitle, value,\n target, and three qualitative brackets), and is further customized with alternating triangle\n and square target markers, and a blue value bar, using the following options:\n <pre>\n    {\n      chartOptions: {\n        extensionPoints: {\n          \"bulletMarker_shape\":[\"triangle\",\"square\"][state.rowIdx % 2],\n          \"bulletTitle_textStyle\":\"green\",\n          \"bulletMeasure_fillStyle\":\"blue\",\n          \"bulletRuleLabel_font\":\"8px sans-serif\",\n          \"bulletRule_height\": 5\n        }\n      }\n    }\n</pre></p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "7ed4dcb1-0dc2-d6f9-91a7-c051a0cb3d18",
    "parent": "440fe4ae-ac25-0742-2080-201451940b95",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "bulletChartObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "6036f2b0-3a92-ed4d-04ad-19c10df99839",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "groupHeadersTitle"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "bd5301e0-7920-539d-fbe0-24d205cef3d9",
    "parent": "6036f2b0-3a92-ed4d-04ad-19c10df99839",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "groupHeaders "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "75469fe1-7eaf-dbf1-bfee-bb53807c2493",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "groupHeadersBody"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "2a033455-2517-5bcc-f698-06b704da24bd",
    "parent": "75469fe1-7eaf-dbf1-bfee-bb53807c2493",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "22"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": "1"
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "8a7be4f6-fb48-92f5-5480-5cf68a2a4bdc",
    "parent": "2a033455-2517-5bcc-f698-06b704da24bd",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "groupHeadersDesc"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "22aa2f9c-586b-ce63-4a82-b484ee9ad1e7",
    "parent": "8a7be4f6-fb48-92f5-5480-5cf68a2a4bdc",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<i>groupHeaders</i> Groups rows using the value of the addIn column and creates a header row over the group. The addIn column is hidden by default.\n\n <div class=\"WDh2\">Data Structure</div>\n \n <p>\n Does not expect a particular format but strings are usually prefered.\n </p>\n \n <div class=\"WDh2\">Defaults</div>\n \n <p>\n <blockquote><pre>\n    defaults: {\n      hide: true\n    }\n </pre></blockquote>\n </p>\n\n <div class=\"WDh2\">Fixed Sorting</div>\n <p> By itself the addIn does not sort the data. The dataTables extra option <em>aoSortingFixed</em> can be used to ensure the rows will always be sorted by groups.\nThe following code snipet, when used in the table pre-execution, will set the sorting to be fixed for all columns corresponding to a groupHeader addIn. </p>\n\n <p>\n <blockquote><pre>\n var arr = [], cd = this.chartDefinition;\n      for (var i=0; i < cd.colTypes.length; i++){ \n          if (cd.colTypes[i] === \"groupHeaders\"){\n            arr.push([i, \"asc\"]);\n          }\n      }\nthis.extraOptions.push( [ 'aaSortingFixed' , arr ] ); \n\n </pre></blockquote>\n </p>\n\n\n  <div class=\"WDh2\">Sample</div>\n  \n <p>\n This sample contains 4 columns, 2 with grouping values and 2 more with data. The grouping columns are both hidden.\n </p>\n \n </p> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "b1f05fba-22cd-b446-0bb5-eabf04ba0257",
    "parent": "2a033455-2517-5bcc-f698-06b704da24bd",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "groupHeadersObj"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   }
  ],
  "title": "CDF - Sample structure"
 }
}