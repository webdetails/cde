{
 "components": {
  "rows": [
   {
    "id": "CUSTOMCOMPONENTS",
    "name": "Custom",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Custom"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "74df39a2-e4f8-9a09-1c40-9f337f3383b6",
    "parent": "CUSTOMCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "SimpleMap"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "['${p:tileServiceParam}']"
     },
     {
      "name": "API_KEY",
      "type": "String",
      "value": ""
     },
     {
      "name": "centerLatitude",
      "type": "Float",
      "value": ""
     },
     {
      "name": "centerLongitude",
      "type": "Float",
      "value": ""
     },
     {
      "name": "cggGraphParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "colormap",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "defaultZoomLevel",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "fillOpacity",
      "type": "Float",
      "value": 0.5
     },
     {
      "name": "locationResolver",
      "type": "locationResolverCustom",
      "value": "openstreetmap"
     },
     {
      "name": "mapEngineType",
      "type": "String",
      "value": "openlayers"
     },
     {
      "name": "mapMode",
      "type": "mapModeCustom",
      "value": ""
     },
     {
      "name": "marker",
      "type": "String",
      "value": "25"
     },
     {
      "name": "markerCggGraph",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerClickFunction",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerHeight",
      "type": "Integer",
      "value": 25
     },
     {
      "name": "markerWidth",
      "type": "Integer",
      "value": 25
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "popupContentsDiv",
      "type": "String",
      "value": ""
     },
     {
      "name": "popupHeight",
      "type": "Integer",
      "value": 250
     },
     {
      "name": "popupParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "popupWidth",
      "type": "Integer",
      "value": 250
     },
     {
      "name": "shapeSource",
      "type": "String",
      "value": ""
     },
     {
      "name": "strokeColor",
      "type": "String",
      "value": "white"
     },
     {
      "name": "strokeWidth",
      "type": "Float",
      "value": 2
     },
     {
      "name": "tilesets",
      "type": "tilesetsCustom",
      "value": "default"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": ""
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:simpleTest}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "shapeMouseClick",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOut",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOver",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsNewMapComponent",
    "typeDesc": "Map Component"
   },
   {
    "id": "f18f6f32-331c-97d4-37f8-2fe2dbc102f9",
    "parent": "CUSTOMCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "MapTilesets"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "['${p:tileServiceParam}','${p:mapEngineParam}']"
     },
     {
      "name": "API_KEY",
      "type": "String",
      "value": ""
     },
     {
      "name": "centerLatitude",
      "type": "Float",
      "value": ""
     },
     {
      "name": "centerLongitude",
      "type": "Float",
      "value": ""
     },
     {
      "name": "cggGraphParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "colormap",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "defaultZoomLevel",
      "type": "Integer",
      "value": "2"
     },
     {
      "name": "fillOpacity",
      "type": "Float",
      "value": 0.5
     },
     {
      "name": "locationResolver",
      "type": "locationResolverCustom",
      "value": "openstreetmap"
     },
     {
      "name": "mapEngineType",
      "type": "String",
      "value": "openlayers"
     },
     {
      "name": "mapMode",
      "type": "mapModeCustom",
      "value": ""
     },
     {
      "name": "marker",
      "type": "String",
      "value": "25"
     },
     {
      "name": "markerCggGraph",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerClickFunction",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerHeight",
      "type": "Integer",
      "value": 25
     },
     {
      "name": "markerWidth",
      "type": "Integer",
      "value": 25
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "popupContentsDiv",
      "type": "String",
      "value": ""
     },
     {
      "name": "popupHeight",
      "type": "Integer",
      "value": 250
     },
     {
      "name": "popupParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "popupWidth",
      "type": "Integer",
      "value": "250"
     },
     {
      "name": "shapeSource",
      "type": "String",
      "value": ""
     },
     {
      "name": "strokeColor",
      "type": "String",
      "value": "white"
     },
     {
      "name": "strokeWidth",
      "type": "Float",
      "value": 2
     },
     {
      "name": "tilesets",
      "type": "tilesetsCustom",
      "value": "default"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": ""
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:testTileServices}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n    this.mapEngineType = this.dashboard.getParameterValue('${p:mapEngineParam}'); \n    this.tilesets = [ this.dashboard.getParameterValue('${p:tileServiceParam}') ]; \n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "shapeMouseClick",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOut",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOver",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsNewMapComponent",
    "typeDesc": "Map Component"
   },
   {
    "id": "30de1732-b592-50c9-8dc9-8eafc0d7da3f",
    "parent": "CUSTOMCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "MapWithMarkers"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "['${p:mapEngineParam}']"
     },
     {
      "name": "API_KEY",
      "type": "String",
      "value": ""
     },
     {
      "name": "centerLatitude",
      "type": "Float",
      "value": ""
     },
     {
      "name": "centerLongitude",
      "type": "Float",
      "value": ""
     },
     {
      "name": "cggGraphParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "colormap",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "defaultZoomLevel",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "fillOpacity",
      "type": "Float",
      "value": 0.5
     },
     {
      "name": "locationResolver",
      "type": "locationResolverCustom",
      "value": "openstreetmap"
     },
     {
      "name": "mapEngineType",
      "type": "String",
      "value": "openlayers"
     },
     {
      "name": "mapMode",
      "type": "mapModeCustom",
      "value": "markers"
     },
     {
      "name": "marker",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerCggGraph",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerClickFunction",
      "type": "JavaScript",
      "value": "function() {\n    var me = this;\n  require(['cdf/Logger'], function(Logger) { Logger.log(me.dashboard.getParameterValue('CustomerNameParameter') + ' has  been clicked'); });\n} "
     },
     {
      "name": "markerHeight",
      "type": "Integer",
      "value": "52"
     },
     {
      "name": "markerWidth",
      "type": "Integer",
      "value": "36"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "popupContentsDiv",
      "type": "String",
      "value": "HiddenContentCol"
     },
     {
      "name": "popupHeight",
      "type": "Integer",
      "value": "250"
     },
     {
      "name": "popupParameters",
      "type": "ValuesArray",
      "value": "[[\"Description\",\"CustomerNameParameter\"]]"
     },
     {
      "name": "popupWidth",
      "type": "Integer",
      "value": 250
     },
     {
      "name": "shapeSource",
      "type": "String",
      "value": ""
     },
     {
      "name": "strokeColor",
      "type": "String",
      "value": "white"
     },
     {
      "name": "strokeWidth",
      "type": "Float",
      "value": 2
     },
     {
      "name": "tilesets",
      "type": "tilesetsCustom",
      "value": "default"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "ForMapWithMarkers"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:testWithMarker}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function(){\n    this.markerImageGetter = 'urlMarker';\n    this.mapEngineType = this.dashboard.getParameterValue('mapEngineParam');\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "shapeMouseClick",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOut",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOver",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsNewMapComponent",
    "typeDesc": "Map Component"
   },
   {
    "id": "2a31515b-0268-c4d9-6c58-3a9f17799ad5",
    "parent": "CUSTOMCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "GeoLocalizedMap"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "['${p:mapEngineParam}']"
     },
     {
      "name": "API_KEY",
      "type": "String",
      "value": ""
     },
     {
      "name": "centerLatitude",
      "type": "Float",
      "value": ""
     },
     {
      "name": "centerLongitude",
      "type": "Float",
      "value": ""
     },
     {
      "name": "cggGraphParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "colormap",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "defaultZoomLevel",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "fillOpacity",
      "type": "Float",
      "value": 0.5
     },
     {
      "name": "locationResolver",
      "type": "locationResolverCustom",
      "value": "openstreetmap"
     },
     {
      "name": "mapEngineType",
      "type": "String",
      "value": "openlayers"
     },
     {
      "name": "mapMode",
      "type": "mapModeCustom",
      "value": "markers"
     },
     {
      "name": "marker",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerCggGraph",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerClickFunction",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerHeight",
      "type": "Integer",
      "value": "52"
     },
     {
      "name": "markerWidth",
      "type": "Integer",
      "value": "36"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "popupContentsDiv",
      "type": "String",
      "value": "HiddenContentCol"
     },
     {
      "name": "popupHeight",
      "type": "Integer",
      "value": "250"
     },
     {
      "name": "popupParameters",
      "type": "ValuesArray",
      "value": "[[\"Description\",\"CustomerNameParameter\"]]"
     },
     {
      "name": "popupWidth",
      "type": "Integer",
      "value": "250"
     },
     {
      "name": "shapeSource",
      "type": "String",
      "value": ""
     },
     {
      "name": "strokeColor",
      "type": "String",
      "value": "white"
     },
     {
      "name": "strokeWidth",
      "type": "Float",
      "value": 2
     },
     {
      "name": "tilesets",
      "type": "tilesetsCustom",
      "value": "default"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "ForMapWithGeo"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:testWithGeoLocalization}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function (){\n    this.mapEngineType = this.dashboard.getParameterValue('mapEngineParam');\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "shapeMouseClick",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOut",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOver",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "type": "ComponentsNewMapComponent",
    "typeDesc": "Map Component"
   },
   {
    "id": "007195fc-9625-c0f8-0391-42104ee7464f",
    "parent": "CUSTOMCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "MapWithShapes"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "['${p:mapEngineParam}']"
     },
     {
      "name": "API_KEY",
      "type": "String",
      "value": ""
     },
     {
      "name": "centerLatitude",
      "type": "Float",
      "value": "38"
     },
     {
      "name": "centerLongitude",
      "type": "Float",
      "value": "-9"
     },
     {
      "name": "cggGraphParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "colormap",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "defaultZoomLevel",
      "type": "Integer",
      "value": "2"
     },
     {
      "name": "fillOpacity",
      "type": "Float",
      "value": ""
     },
     {
      "name": "locationResolver",
      "type": "locationResolverCustom",
      "value": "openstreetmap"
     },
     {
      "name": "mapEngineType",
      "type": "String",
      "value": "openlayers"
     },
     {
      "name": "mapMode",
      "type": "mapModeCustom",
      "value": "shapes"
     },
     {
      "name": "marker",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerCggGraph",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerClickFunction",
      "type": "JavaScript",
      "value": "function() {\n    alert(dashboard.getParameterValue('CustomerNameParameter') + ' has  been clicked');\n}"
     },
     {
      "name": "markerHeight",
      "type": "Integer",
      "value": "52"
     },
     {
      "name": "markerWidth",
      "type": "Integer",
      "value": "36"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "popupContentsDiv",
      "type": "String",
      "value": "HiddenContentCol"
     },
     {
      "name": "popupHeight",
      "type": "Integer",
      "value": "250"
     },
     {
      "name": "popupParameters",
      "type": "ValuesArray",
      "value": "[[\"Description\",\"CustomerNameParameter\"]]"
     },
     {
      "name": "popupWidth",
      "type": "Integer",
      "value": 250
     },
     {
      "name": "shapeSource",
      "type": "String",
      "value": ""
     },
     {
      "name": "strokeColor",
      "type": "String",
      "value": ""
     },
     {
      "name": "strokeWidth",
      "type": "Float",
      "value": ""
     },
     {
      "name": "tilesets",
      "type": "tilesetsCustom",
      "value": "default"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "ForMapWithShapes"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:testWithShapes}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n    var getResource = ''; //this.dashboard.getWebAppPath() + '/plugin/pentaho-cdf-dd/api/resources';\n\n    this.shapeResolver = 'geoJSON';\n    this.setAddInOptions('ShapeResolver', 'geoJSON', {\n        url: getResource + '${solution:countries.js}', //BA server does not recognize the .geojson extension\n        idPropertyName: 'NAME' //GeoJSON feature property that will be used to index the feature\n    });\n    \n    this.mapEngineType = this.dashboard.getParameterValue('mapEngineParam');\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": "function(){\n    this.off('map:center').on('map:center', function(event){\n        Dashboards.log('new map center:', JSON.stringify(event.center)) \n    });\n    \n    this.off('map:zoom').on('map:zoom', function(event){\n        Dashboards.log('new map zoomLevel:', event.zoomLevel);\n    });\n    \n} "
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "shapeMouseClick",
      "type": "JavaScript",
      "value": "function f(event){\n    var msg = 'Mouse clicked at ' + event.data.key +', at latitude:' + event.latitude + ' and longitude:' + event.longitude;\n    Dashboards.log(msg); \n} "
     },
     {
      "name": "shapeMouseOut",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOver",
      "type": "JavaScript",
      "value": "function f(event){\n    //shapeMouseOver: callback fired whenever the mouse is over a given shape\n    // Typically an event structure looks like this: \n    var eventExample = {\n        latitude: 40,     //Geographical coordinates at the mouse pointer location \n        longitude: -9.35, //always in decimal degrees\n        data: { \n            key: \"PT\", // key associated with this shape \n            value: 10e6, //value used to define the shape colour\n            minValue: 5e3,\n            maxValue: 220e6,\n            rawData: [\"PT\", 10e6, \"Portugal\", \"Euro\"] // entire row from the result set associated with this key\n        },\n        style: {  //feature-specific style (in this case, it's a shape)\n            'stroke-width': 1,\n            'z-index': 1,\n            'visible': true,\n            'fill': 'rgba(255,255,0,55)',\n            'fill-opacity': 0.5,\n            'stroke': 'white',\n            'stroke-opacity': 1\n        },\n        mapEngineType: 'OpenLayers',\n        draw: function( style ){}, // function used internally to apply a style to the feature (only works with shapes)\n        feature: {}, // engine-specific structure pertaining the feature\n        featureType: 'shape', // also 'marker'\n        raw: {} //engine-specific event structure\n    };\n    \n  Dashboards.log('Mouse currently over the shape \"'+ event.id+ '\", at latitude: ' + event.latitude + ' and longitude: ' + event.longitude);\n    \n} "
     }
    ],
    "type": "ComponentsNewMapComponent",
    "typeDesc": "Map Component"
   },
   {
    "id": "GENERIC",
    "name": "Generic",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Generic"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "dc7565c1-1acd-d4d4-0e9c-eab103162f65",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "CustomerNameParameter"
     },
     {
      "name": "propertyValue",
      "type": "String",
      "value": "None"
     },
     {
      "name": "parameterViewRole",
      "type": "parameterViewRoleCustom",
      "value": "unused"
     },
     {
      "name": "bookmarkable",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "public",
      "type": "Boolean",
      "value": "false"
     }
    ],
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter"
   },
   {
    "id": "8255ffd8-fd2e-f7c3-3c7a-054ffccc5ec6",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "tileServiceParam"
     },
     {
      "name": "propertyValue",
      "type": "String",
      "value": "default"
     },
     {
      "name": "parameterViewRole",
      "type": "parameterViewRoleCustom",
      "value": "unused"
     },
     {
      "name": "bookmarkable",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "public",
      "type": "Boolean",
      "value": "false"
     }
    ],
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter"
   },
   {
    "id": "6499a056-b6a2-4e16-e342-7fc7dac463e4",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "mapEngineParam"
     },
     {
      "name": "propertyValue",
      "type": "String",
      "value": "openlayers"
     },
     {
      "name": "parameterViewRole",
      "type": "parameterViewRoleCustom",
      "value": "unused"
     },
     {
      "name": "bookmarkable",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "public",
      "type": "Boolean",
      "value": "false"
     }
    ],
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter"
   },
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Others"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "64eefceb-8f4d-e61c-3bae-c5c0fbbc6095",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "CustomerNameText"
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "['CustomerNameParameter']"
     },
     {
      "name": "expression",
      "type": "JavaScript",
      "value": "function () {\n    return this.dashboard.getParameterValue('CustomerNameParameter');    \n} "
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:HiddenContentCol}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n    this.lifecycle = {\n        silent: true\n    };\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     }
    ],
    "type": "ComponentstextComponent",
    "typeDesc": "Text Component"
   },
   {
    "id": "SELECTORS",
    "name": "Selects",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Selects"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "fe94aba4-cc1f-209a-4944-a7db6b68b935",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "selectMapEngineComponent"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": "${p:mapEngineParam}"
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "externalPlugin",
      "type": "String",
      "value": ""
     },
     {
      "name": "valueAsId",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": ""
     },
     {
      "name": "valuesArray",
      "type": "ValuesArray",
      "value": "[[\"openlayers\",\"openlayers\"],[\"google\",\"google\"]]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:selectMapEngineObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     }
    ],
    "type": "ComponentsSelect",
    "typeDesc": "Select Component"
   },
   {
    "id": "3f268daf-49ea-0f2b-c0e7-2cc1b1ea5c24",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "selectTileServiceComponent"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": "${p:tileServiceParam}"
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "externalPlugin",
      "type": "String",
      "value": ""
     },
     {
      "name": "valueAsId",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": ""
     },
     {
      "name": "valuesArray",
      "type": "ValuesArray",
      "value": "[[\"google\",\"google\"]]"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "refreshPeriod",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:selectTileObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function f(){\n\n    var s = _.keys(this.dashboard.getComponentByName('render_SimpleMap').tileServices);\n    this.valuesArray =  _.zip(s,s);\n} "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "extraOptions",
      "type": "OptionArray",
      "value": "[]"
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     }
    ],
    "type": "ComponentsSelect",
    "typeDesc": "Select Component"
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "SCRIPTING",
    "name": "SCRIPTING Queries",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "SCRIPTING Queries"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "1bc6fcbf-4672-c3db-6bf9-92b4d0e6d634",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "ForMapWithMarkers"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"Longitude\",\n\"Latitude\",\n\"Description\"\n};\n\nClass[] columnTypes = new Class[]{\nFloat.class\n,Float.class\n,String.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\n\nmodel.addRow(new Object[]{ new Float(3), new Float(45.45), new String(\"Atelier Graphique\")});\nmodel.addRow(new Object[]{ new Float(12), new Float(45.45), new String(\"Australian Collectors, Co.\")});\nmodel.addRow(new Object[]{ new Float(14), new Float(45.45), new String(\"Signal Gift Stores\")});\nreturn model;\n\n\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "d5bc637e-e056-f653-98ff-f64dd8d58061",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "ForMapWithGeo"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"City\",\n\"Description\"\n};\n\nClass[] columnTypes = new Class[]{\nString.class\n,String.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\n\nmodel.addRow(new Object[]{ new String(\"Nantes\"), new String(\"Atelier Graphique\")});\nmodel.addRow(new Object[]{ new String(\"Melbourne\"), new String(\"Australian Collectors, Co.\")});\nmodel.addRow(new Object[]{ new String(\"Las Vegas\"), new String(\"Signal Gift Stores\")});\nmodel.addRow(new Object[]{ new String(\"Paris\"), new String(\"La Rochelle Gifts\")});\nmodel.addRow(new Object[]{ new String(\"Stavern\"), new String(\"Baane Mini Imports\")});\nreturn model;\n\n\n"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   },
   {
    "id": "cbf44bc8-199c-1c07-2496-20ccf0c86bf7",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "ForMapWithShapes"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "SqlQuery",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[]{\n\"id\",\n\"fill\"\n};\n\nClass[] columnTypes = new Class[]{\nString.class\n,Float.class\n};\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\n\n/* Population density pop/km2*/\nmodel.addRow(new Object[]{ new String(\"Bangladesh\"), new Float(988.38)});\nmodel.addRow(new Object[]{ new String(\"Taiwan\"), new Float(646)});\nmodel.addRow(new Object[]{ new String(\"South Korea\"), new Float(505)});\nmodel.addRow(new Object[]{ new String(\"Rwanda\"), new Float(416)});\nmodel.addRow(new Object[]{ new String(\"Netherlands\"), new Float(405.2)});\nmodel.addRow(new Object[]{ new String(\"India\"), new Float(377.4)});\nmodel.addRow(new Object[]{ new String(\"Haiti\"), new Float(385)});\nmodel.addRow(new Object[]{ new String(\"Israel\"), new Float(369)});\nmodel.addRow(new Object[]{ new String(\"Belgium\"), new Float(366)});\nmodel.addRow(new Object[]{ new String(\"Burundi\"), new Float(365)});\nmodel.addRow(new Object[]{ new String(\"Japan\"), new Float(337)});\nmodel.addRow(new Object[]{ new String(\"Philippines\"), new Float(330.53)});\nmodel.addRow(new Object[]{ new String(\"Sri Lanka\"), new Float(309)});\nmodel.addRow(new Object[]{ new String(\"Vietnam\"), new Float(268)});\nmodel.addRow(new Object[]{ new String(\"United Kingdom\"), new Float(262)});\nmodel.addRow(new Object[]{ new String(\"Pakistan\"), new Float(230.98)});\nmodel.addRow(new Object[]{ new String(\"Germany\"), new Float(226)});\nmodel.addRow(new Object[]{ new String(\"Italy\"), new Float(199)});\nmodel.addRow(new Object[]{ new String(\"Dominican Republic\"), new Float(197)});\nmodel.addRow(new Object[]{ new String(\"North Korea\"), new Float(196)});\nmodel.addRow(new Object[]{ new String(\"Switzerland\"), new Float(196)});\nmodel.addRow(new Object[]{ new String(\"Nigeria\"), new Float(188)});\nmodel.addRow(new Object[]{ new String(\"Nepal\"), new Float(180)});\nmodel.addRow(new Object[]{ new String(\"Guatemala\"), new Float(142)});\nmodel.addRow(new Object[]{ new String(\"China\"), new Float(141.37)});\nmodel.addRow(new Object[]{ new String(\"Uganda\"), new Float(141)});\nmodel.addRow(new Object[]{ new String(\"Czech Republic\"), new Float(133)});\nmodel.addRow(new Object[]{ new String(\"Thailand\"), new Float(128)});\nmodel.addRow(new Object[]{ new String(\"Indonesia\"), new Float(124)});\nmodel.addRow(new Object[]{ new String(\"Poland\"), new Float(123)});\nmodel.addRow(new Object[]{ new String(\"Malawi\"), new Float(121)});\nmodel.addRow(new Object[]{ new String(\"France\"), new Float(118)});\nmodel.addRow(new Object[]{ new String(\"Syria\"), new Float(115)});\nmodel.addRow(new Object[]{ new String(\"Portugal\"), new Float(115)});\nmodel.addRow(new Object[]{ new String(\"Hungary\"), new Float(106)});\nmodel.addRow(new Object[]{ new String(\"Azerbaijan\"), new Float(109)});\nmodel.addRow(new Object[]{ new String(\"Ghana\"), new Float(103)});\nmodel.addRow(new Object[]{ new String(\"Cuba\"), new Float(102)});\nmodel.addRow(new Object[]{ new String(\"Austria\"), new Float(101)});\nmodel.addRow(new Object[]{ new String(\"Turkey\"), new Float(100)});\nmodel.addRow(new Object[]{ new String(\"United Arab Emirates\"), new Float(99)});\nmodel.addRow(new Object[]{ new String(\"Spain\"), new Float(93)});\nmodel.addRow(new Object[]{ new String(\"Serbia\"), new Float(93)});\nmodel.addRow(new Object[]{ new String(\"Benin\"), new Float(92)});\nmodel.addRow(new Object[]{ new String(\"Malaysia\"), new Float(91)});\nmodel.addRow(new Object[]{ new String(\"Egypt\"), new Float(85.78)});\nmodel.addRow(new Object[]{ new String(\"Romania\"), new Float(84)});\nmodel.addRow(new Object[]{ new String(\"Greece\"), new Float(82)});\nmodel.addRow(new Object[]{ new String(\"Ethiopia\"), new Float(81)});\nmodel.addRow(new Object[]{ new String(\"Burma\"), new Float(79)});\nmodel.addRow(new Object[]{ new String(\"Iraq\"), new Float(77)});\nmodel.addRow(new Object[]{ new String(\"Ukraine\"), new Float(75)});\nmodel.addRow(new Object[]{ new String(\"Honduras\"), new Float(75)});\nmodel.addRow(new Object[]{ new String(\"Morocco\"), new Float(75)});\nmodel.addRow(new Object[]{ new String(\"Cambodia\"), new Float(74)});\nmodel.addRow(new Object[]{ new String(\"Ivory Coast\"), new Float(72)});\nmodel.addRow(new Object[]{ new String(\"Senegal\"), new Float(69)});\nmodel.addRow(new Object[]{ new String(\"Kenya\"), new Float(66)});\nmodel.addRow(new Object[]{ new String(\"Uzbekistan\"), new Float(67)});\nmodel.addRow(new Object[]{ new String(\"Tunisia\"), new Float(66)});\nmodel.addRow(new Object[]{ new String(\"Bulgaria\"), new Float(66)});\nmodel.addRow(new Object[]{ new String(\"Burkina Faso\"), new Float(64)});\nmodel.addRow(new Object[]{ new String(\"Ecuador\"), new Float(61)});\nmodel.addRow(new Object[]{ new String(\"Mexico\"), new Float(60)});\nmodel.addRow(new Object[]{ new String(\"Tajikistan\"), new Float(56)});\nmodel.addRow(new Object[]{ new String(\"Yemen\"), new Float(54)});\nmodel.addRow(new Object[]{ new String(\"Tanzania\"), new Float(51)});\nmodel.addRow(new Object[]{ new String(\"Iran\"), new Float(47)});\nmodel.addRow(new Object[]{ new String(\"Belarus\"), new Float(46)});\nmodel.addRow(new Object[]{ new String(\"Guinea\"), new Float(44)});\nmodel.addRow(new Object[]{ new String(\"Cameroon\"), new Float(44)});\nmodel.addRow(new Object[]{ new String(\"South Africa\"), new Float(43)});\nmodel.addRow(new Object[]{ new String(\"Colombia\"), new Float(42)});\nmodel.addRow(new Object[]{ new String(\"Afghanistan\"), new Float(39)});\nmodel.addRow(new Object[]{ new String(\"Madagascar\"), new Float(35)});\nmodel.addRow(new Object[]{ new String(\"United States\"), new Float(32.32)});\nmodel.addRow(new Object[]{ new String(\"Zimbabwe\"), new Float(33)});\nmodel.addRow(new Object[]{ new String(\"Venezuela\"), new Float(32)});\nmodel.addRow(new Object[]{ new String(\"Mozambique\"), new Float(30)});\nmodel.addRow(new Object[]{ new String(\"Democratic Republic of the Congo\"), new Float(29)});\nmodel.addRow(new Object[]{ new String(\"Peru\"), new Float(24)});\nmodel.addRow(new Object[]{ new String(\"Brazil\"), new Float(24)});\nmodel.addRow(new Object[]{ new String(\"Sweden\"), new Float(23)});\nmodel.addRow(new Object[]{ new String(\"Chile\"), new Float(22)});\nmodel.addRow(new Object[]{ new String(\"South Sudan\"), new Float(18)});\nmodel.addRow(new Object[]{ new String(\"Zambia\"), new Float(17)});\nmodel.addRow(new Object[]{ new String(\"Sudan\"), new Float(17)});\nmodel.addRow(new Object[]{ new String(\"Angola\"), new Float(17)});\nmodel.addRow(new Object[]{ new String(\"Algeria\"), new Float(16)});\nmodel.addRow(new Object[]{ new String(\"Somalia\"), new Float(15)});\nmodel.addRow(new Object[]{ new String(\"Argentina\"), new Float(14)});\nmodel.addRow(new Object[]{ new String(\"Niger\"), new Float(14)});\nmodel.addRow(new Object[]{ new String(\"Saudi Arabia\"), new Float(14)});\nmodel.addRow(new Object[]{ new String(\"Mali\"), new Float(12)});\nmodel.addRow(new Object[]{ new String(\"Bolivia\"), new Float(9)});\nmodel.addRow(new Object[]{ new String(\"Chad\"), new Float(9)});\nmodel.addRow(new Object[]{ new String(\"Russia\"), new Float(8)});\nmodel.addRow(new Object[]{ new String(\"Kazakhstan\"), new Float(6)});\nmodel.addRow(new Object[]{ new String(\"Canada\"), new Float(3.55)});\nmodel.addRow(new Object[]{ new String(\"Australia\"), new Float(3)});\n\nreturn model;"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting"
   }
  ]
 },
 "filename": "/public/plugin-samples/pentaho-cdf-dd/tests/NewMapComponent/maps.cdfde",
 "layout": {
  "rows": [
   {
    "id": "0c161c28-7118-15a8-b495-840c5525b04f",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "template"
     },
     {
      "name": "resourceFile",
      "type": "ResourceFile",
      "value": "${res:../../template.css}"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Css"
     }
    ],
    "type": "LayoutResourceFile",
    "typeDesc": "Resource"
   },
   {
    "id": "bbe15273-4bcc-7290-77bf-3a2e9205064a",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "wd_style"
     },
     {
      "name": "resourceFile",
      "type": "ResourceFile",
      "value": "${res:../../cdeReference.css}"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Css"
     }
    ],
    "type": "LayoutResourceFile",
    "typeDesc": "Resource"
   },
   {
    "id": "7bae4c43-4df1-1af3-6521-f40db8db57f4",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "GoogleApiKeyDefinition"
     },
     {
      "name": "resourceCode",
      "type": "Resource",
      "value": "window.API_KEY = window.API_KEY || 0;//'<GOOGLE_API_KEY>'; "
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Javascript"
     }
    ],
    "type": "LayoutResourceCode",
    "typeDesc": "Resource"
   },
   {
    "id": "1dc266d5-7b94-4aa0-5200-991bdb65706f",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "mapCSS"
     },
     {
      "name": "resourceCode",
      "type": "Resource",
      "value": "#simpleTest, #testTileServices, \n#testWithMarker, #testWithGeoLocalization, \n#testWithShapes\n{\n    width: 700px;\n    height: 500px;\n    margin-bottom:5px;\n} \n\n\n.WDdataCellBody {\n    padding-left: 100px;\n    padding-bottom: 10px;\n}\n\n\npre.prettyprint {\nborder: 1px none #888;\n} \n\n.WDhidden{\n    display: none;\n} "
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Css"
     }
    ],
    "type": "LayoutResourceCode",
    "typeDesc": "Resource"
   },
   {
    "id": "7c96f351-d035-8150-3fbf-acff9514c0a1",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "title"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDheader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "689413e2-cd9a-0d63-21c7-f297302f7f26",
    "parent": "7c96f351-d035-8150-3fbf-acff9514c0a1",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Map Component Reference "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": "18"
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "ca944a50-23e8-d5e2-c80c-1158ac263102",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "documentation"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "a05b739c-8186-4b41-eacc-790980a35213",
    "parent": "ca944a50-23e8-d5e2-c80c-1158ac263102",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "<p>\n  This component  allows the user to either navigate through the map and see information about marked locations, or to represent quantities as the fill color of a set of shapes/regions.\n</p>\n\n<h3>Global Options</h3>\n<dl class=\"documentation\">\n  <dt>listeners</dt><dd><i>Array - </i> Parameters to which this component will react</dd>\n  <dt>parameters</dt><dd><i>Array of Arrays - </i> Parameters</dd>\n  <dt>htmlObject</dt><dd>map. Not optional for now</dd>\n  <dt>executeAtStart</dt><dd>True to execute the component at start, false otherwise</dd>\n  <dt>preExecution</dt><dd><i>Function - </i> Function to be called before the component is executed</dd>\n  <dt>postExecution</dt><dd><i>Function - </i> Function to be called after the component is executed</dd>\n\n  <dt>Center Longitude</dt><dd>Initial longitude position</dd>\n  <dt>Center Latitude</dt><dd>Initial latitude position</dd>\n  <dt>Default zoom Level</dt><dd>Initial map zoom</dd>\n  <dt>Datasource</dt><dd>Name for the cda data source where the location data is read from</dd>\n  <dt>Map Engine</dt><dd>Map engine to use to render the map. Can be either google (Google Maps 3) or openlayers (OpenLayers 2). If using Google Maps, please either define a global javascript variable with the name API_KEY containing the string with your API key.</dd>\n  <dt>API_KEY</dt><dd>If using Google Maps, put your API key here.</dd>\n  <dt>Tilesets to display as layers</dt><dd><i>Array of strings - </i> List of tile map servers, or urls of the form <pre>http://{switch:a,b,c}.tile.openstreetmap.org/${z}/${x}/${y}.png</pre></dd>\n  <dt>Operation Mode</dt><dd>Define how the result set returned by the data source will be interpreted. Possible values: \"Just the map\" (the output of the datasource is ignores), \"Marker\", \"Shapes\". </dd>\n</dl>\n\n<h3>Options valid in Marker mode</h3>\n<dl class=\"documentation\">\n  <dt>Marker image</dt><dd>URL-string for the marker image. This will be override either by markers defined in the resultset or when using cgg graphs to render markers.</dd>\n  <dt>Marker Width</dt><dd>Width for the marker image.</dd>\n  <dt>Marker Height</dt><dd>Height for the marker image.</dd>\n  <dt>Marker Click Parameters</dt><dd>Parameters to be changed when a marker is clicked - arg is column Name, value is parameter name to change with column value</dd>\n  <dt>Marker click Function</dt><dd>Javascript function to be executed when marker is clicked. If it returns anything other than <kbd>false</kbd>, the default popup window will open after this function is executed.</dd>\n  <dt>Cgg Graph for Marker</dt><dd>Name of the cgg graph script to use as marker renderer. This will usually be in the form /solution/GraphName.js </dd>\n  <dt>Cgg Graph Parameters</dt><dd>Mapping between resultset columns and parameters for cgg graph - arg is column Name, value is the parameter name that will be passed to CGG having as value the column value</dd>\n  <dt>Div for popup window</dt><dd>Div id to use as the source for the popup window contents</dd>\n  <dt>Popup Width</dt><dd>Width for the popup window.</dd>\n  <dt>Popup Height</dt><dd>Height for the popup window.</dd>\n</dl>\n\n<h3>Location Result Set in Marker mode</h3>\nThese locations are obtained with a Data Source that returns a result set where certain column names have associated semantics.<br/>\n<dl class=\"documentation\">\n  <dt>Longitude</dt><dd> Location Longitude</dd>\n  <dt>Latitude</dt><dd> Location Latitude</dd>\n  <dt>Address</dt><dd> Location address. Either one of the columns or Latitude/Longitude must be present</dd>\n  <dt> City: </b>Location address. Either one of the columns or Latitude/Longitude must be present</dd>\n  <dt> County</dt><dd> Location address. Either one of the columns or Latitude/Longitude must be present</dd>\n  <dt>State</dt><dd> Location address. Either one of the columns or Latitude/Longitude must be present</dd>\n  <dt>Region</dt><dd> Location address. Either one of the columns or Latitude/Longitude must be present</dd>\n  <dt> Country</dt><dd> Location address. Either one of the columns or Latitude/Longitude must be present</dd>\n  <dt>Description</dt><dd> Optional. If existent, its value will be used to populate an hover popup for each location</dd>\n  <dt>marker</dt><dd> Optional. If exists, this will be used as the url for the marker image to be used</dd>\n  <dt>markerWidth</dt><dd> Optional. Width of the marker image</dd>\n  <dt>markerHeight</dt><dd> Optional. Height of the marker image</dd>\n  <dt>popupContents</dt><dd> Optional. If exists, the value will be used as the html to populate a popup window that will appear when user clicks on the marker.</dd>\n  <dt>popupWidth</dt><dd> Optional. Width for the popup window</dd>\n  <dt>popupHeight</dt><dd> Optional. Height for the popup window.</dd>\n</dl>\n\n\n<h3>Options valid in Shapes mode</h3>\nIn Shape mode, the result set is assumed to be of the form <kbd>[[key1, value1], [key2, value2]]</kbd>.\n<dl class=\"documentation\">\n  <dt>Shape Definitions</dt>\n  <dd>\n  File/URL of a resource containing the definitions of the shapes to be drawn on the map.\n  Please consult the NewMapComponent AddIn Reference for more details.\n  </dd>\n\n  <dt>Shape Mouse Over Function</dt>\n  <dd> Javascript function to be executed when marker is clicked</dd>\n  \n  <dt>Shape Mouse Out Function</dt>\n  <dd> Javascript function to be executed when marker is clicked</dd>\n  \n  <dt>Shape Mouse Click Function</dt>\n  <dd> Javascript function to be executed when the shape is clicked. <br/>\nThe callback functions in <i>Shape mode</i> are of the form:\n  <pre class='javascript prettyprint lang-js'>\nfunction f(event){\n    //shapeMouseOver: callback fired whenever the mouse is over a given shape\n    // Typically an event structure looks like this:\n    var eventExample = {\n        latitude: 40,     //Geographical coordinates at the mouse pointer location\n        longitude: -9.35, //always in decimal degrees,\n        model: {...},\n        id: \"PT\",\n        data: {\n            key: \"PT\", // key associated with this shape\n            0: \"PT\",\n            value: 10e6, //value used to define the shape colour\n            1: 10e6,\n            2: \"Portugal\",\n            3: \"Euro\"\n        },\n        style: {  //feature-specific style (in this case, it's a shape)\n            'stroke-width': 1,\n            'z-index': 1,\n            'visible': true,\n            'fill': 'rgba(255,255,0,55)',\n            'fill-opacity': 0.5,\n            'stroke': 'white',\n            'stroke-opacity': 1\n        },\n        mapEngineType: 'openlayers2',\n        draw: function( style ){}, // function used internally to apply a style to the feature (only works with shapes)\n        feature: {}, // engine-specific structure pertaining the feature\n        featureType: 'shape', // also 'marker'\n        raw: {} //engine-specific event structure\n    };\n\n   require(['cdf/Logger'], function(Logger) { Logger.log('Mouse currently over the shape \"'+ event.data.key+ '\", at latitude: ' + event.latitude + ' and longitude: ' + event.longitude); });\n\n    // If a structure containing style settings is returned, the shape will be redrawn,\n    // If a falsy result is returned, the shape under the mouse cursor is not redrawn.\n\n    return {\n        //fill: event.style.fill,\n        //\"fill-opacity\": 0.5,\n        stroke: 'white',\n        \"stroke-width\": 2,\n        \"z-index\":1\n    };\n}\n</pre>\n</dd>\n</dl>\n \n<h3>Events</h3>\n<p>The following Backbone events are issued by the component</p>\n<dl class=\"documentation\">\n    <dt><code>map:zoom</code></dt>\n    <dd>Triggered on each change of the zoom level. Emits a Viewport object.</dd>\n    <dt><code>map:center</code></dt>\n    <dd>Triggered whenever the user pans. Emits a Viewport object.</dd>\n</dl>\n<p>Sample Viewport Object:</p>\n<pre>\n{\n    zoomLevel: 1, // integer\n    center: {\n        latitude: 0, // float\n        longitude: 0 // float\n    },\n    viewport: {\n        northEast: { // nortEast corner\n            latitude: 10,\n            longitude: 10\n        },\n        southWest: { // southWest corner\n            latitude: -10,\n            longitude: -10\n        }\n    },\n    raw: {...} //engine-specific event\n}\n</pre> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "b8d129ad-f915-3f93-2126-2b20405e81a4",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "subtitle0"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": "30"
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "efbbf0fc-7653-1da4-d822-5b25084834b2",
    "parent": "b8d129ad-f915-3f93-2126-2b20405e81a4",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Map with no markers and no shapes - Simple Case "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": "14"
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "031ebae9-7227-45e4-d738-27b433366c88",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "4ea7496b-9479-e551-8416-66464f5a239e",
    "parent": "031ebae9-7227-45e4-d738-27b433366c88",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "simpleTest"
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "898fb4ea-8222-7d4c-ed86-68a2312d0e61",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "subtitle1"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": "30"
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "df73c2a6-fdbd-0025-7dbd-3ed6814a00d9",
    "parent": "898fb4ea-8222-7d4c-ed86-68a2312d0e61",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Map tile services "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": "14"
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "ab249d52-0093-1b89-f2ad-1be957bca4bd",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "bb846800-9c98-a8c2-7fc0-a2490f52ea02",
    "parent": "ab249d52-0093-1b89-f2ad-1be957bca4bd",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "1b89b418-ecc5-8bdb-fcff-bc9d4907d13e",
    "parent": "bb846800-9c98-a8c2-7fc0-a2490f52ea02",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "7aefe54d-5f73-4f82-48df-8baa25bb4fcc",
    "parent": "1b89b418-ecc5-8bdb-fcff-bc9d4907d13e",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDhidden"
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "44a50b2f-58f3-1c31-5e5e-db7a1989e91b",
    "parent": "7aefe54d-5f73-4f82-48df-8baa25bb4fcc",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Select map engine: "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "5fd29c27-167e-a348-dc8d-d9f3379181b6",
    "parent": "1b89b418-ecc5-8bdb-fcff-bc9d4907d13e",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "selectMapEngineObj"
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "6"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "f28cc621-7d21-c7bf-cb42-89b30a7f5984",
    "parent": "bb846800-9c98-a8c2-7fc0-a2490f52ea02",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "92b508c4-d72c-be1d-4ffb-201d4c4a76fe",
    "parent": "f28cc621-7d21-c7bf-cb42-89b30a7f5984",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "c410f305-ae8f-10f1-72fd-c19613e542bf",
    "parent": "92b508c4-d72c-be1d-4ffb-201d4c4a76fe",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Select tile map service: "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "35ac31c2-b779-21b8-01e0-df474b6cc62d",
    "parent": "f28cc621-7d21-c7bf-cb42-89b30a7f5984",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "selectTileObj"
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": "6"
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "52b2f3af-f55d-072e-bed8-39d8080eff6f",
    "parent": "bb846800-9c98-a8c2-7fc0-a2490f52ea02",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "testTileServices"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "d040ec54-9038-a5eb-80bc-d43a8dd7b2cb",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "subtitle2"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": "30"
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "b1450556-eddf-20ef-afcc-338b5f789538",
    "parent": "d040ec54-9038-a5eb-80bc-d43a8dd7b2cb",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "case2"
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Map with Markers based on Long/Lat and attached descriptions and Click Function enabled "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": "14"
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "65cf4247-43f6-462c-aadf-5fa7edcd4304",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": "center"
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "a9446f13-1535-f707-3069-e0eb428a7c0a",
    "parent": "65cf4247-43f6-462c-aadf-5fa7edcd4304",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "testWithMarker"
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "527b2112-4815-ece1-3b3e-80c160f303c7",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "subtitle3"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": "30"
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "e6974b97-507b-077b-3eaa-3f967786ed07",
    "parent": "527b2112-4815-ece1-3b3e-80c160f303c7",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Map with markers based on city names and popup windows on click "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": "14"
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "fda770ca-e9ed-7f55-52cc-2989a49795ef",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": "center"
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "d998a5de-19b9-e3b7-3990-ca074f13d50e",
    "parent": "fda770ca-e9ed-7f55-52cc-2989a49795ef",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "testWithGeoLocalization"
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "1f52ad78-0b33-93b1-1030-9b5ef52133d2",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "subtitle4"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": "30"
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellHeader"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "c25548ae-021d-ec41-8c37-a3b6a90e1df3",
    "parent": "1f52ad78-0b33-93b1-1030-9b5ef52133d2",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "case3"
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Map with Shapes (population per km2, top 100 countries) "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": "14"
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "6b726fae-b0e3-1a26-a3b8-1802d4685a19",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": "center"
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDdataCellBody"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "02ee5bef-1f60-9d02-1481-b7a8345f6434",
    "parent": "6b726fae-b0e3-1a26-a3b8-1802d4685a19",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "testWithShapes"
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "5e871a57-1180-ad52-1696-30bf387afd00",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "HiddenContent"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": "WDhidden"
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "49cd1edc-63ca-7ed6-e335-1231856422c9",
    "parent": "5e871a57-1180-ad52-1696-30bf387afd00",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "HiddenContentCol"
     },
     {
      "name": "columnSpan",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "columnPrepend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnAppend",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "columnPrependTop",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnAppendBottom",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "columnBigBorder",
      "type": "Boolean",
      "value": "false"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutColumn",
    "typeDesc": "Column"
   },
   {
    "id": "2b4e374e-2e74-1351-b9ff-98b1a6e5c217",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "dfooter"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "2f9d2096-8997-6bf6-4a71-c62deeabb023",
    "parent": "2b4e374e-2e74-1351-b9ff-98b1a6e5c217",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "Credits"
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Map Component Development has been sponsored by <a href='http://www.d4is.com'>D4is Solutions</a> "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   }
  ],
  "title": "CDF - Sample structure"
 }
}